{"version":3,"sources":["components/SingleResult.jsx","components/ResultsContainer.jsx","components/SearchInput.jsx","components/MainContainer.jsx","components/Menu.jsx","components/Nav.jsx","components/SliderWindow.jsx","components/FavoriteArtistCard.jsx","components/FavoriteArtistContainer.jsx","components/FavoriteTracksCard.jsx","components/FavoriteTracksContainer.jsx","components/MyArtistContainer.jsx","utils/spotify.js","App.js","reportWebVitals.js","index.js"],"names":["SingleResult","artist","index","getSimilarArtists","className","src","images","length","url","alt","name","genres","slice","map","genre","Label","size","onClick","id","ResultsContainer","searchResults","setArtist","i","SearchInput","searchHandler","searchArtists","Input","placeholder","onChange","e","fluid","onKeyDown","key","handleEnterPress","MainContainer","menuOpen","style","backgroundImage","backgroundBlendMode","backgroundPosition","backgroundSize","Menu","setSliderWindowOpen","setSearchPageShowing","useState","btnActive","setBtnActive","Icon","Nav","setMenuOpen","SliderWindow","getTopSongsSimilarArtists","sliderWindowOpen","notify","playlistName","setPlaylistName","target","value","FavoriteArtistCard","Grid","Column","Image","FavoriteArtistContainer","myFavoriteArtists","console","log","stackable","columns","doubling","FavoriteTracksCard","song","album","artists","FavoriteTracksContainer","myFavoriteTracks","MyArtistsContainer","artistsShowing","setArtistShowing","accessToken","Spotify","getAccessToken","newAccessToken","window","location","href","match","newExpiresIn","expiresIn","Number","setTimeout","history","pushState","accessUrl","searchTerm","headers","Authorization","fetch","then","response","ok","json","Error","networkError","message","jsonResponse","getTopSongs","tracks","track","uri","getUsersTopArtists","items","getUsersTopTracks","getMyDetails","savePlaylist","trackURIs","userID","playlistID","method","body","JSON","stringify","uris","App","setAccessToken","myDetails","setMyDetails","setMyFavoriteArtists","setMyFavoriteTracks","setSearchTerm","setSearchResults","setModalOpen","useEffect","results","favArtists","favTracks","similarArtists","setSimilarArtists","artistID","playListName","a","artistSongArray","push","flattened","flat","mapped","concat","Object","values","songURI","searchPageShowing","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","preventDefault","newestOnTop","rtl","pauseOnFocusLoss","token","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb215a5e.chunk.js","sourcesContent":["import React from \"react\";\nimport { Label } from \"semantic-ui-react\";\n\nexport default function SingleResult({ artist, index, getSimilarArtists }) {\n  return (\n    <div className={\"result-container\"}>\n      <index className=\"index-wrapper\">\n        <div>{index}</div>\n      </index>\n      <img\n        className=\"image-wrapper\"\n        src={artist.images.length > 0 ? artist.images[1].url : null}\n        alt=\"artist-image\"\n      />\n      <div className=\"text-wrapper\">\n        <div className=\"header\">{artist.name}</div>\n        <div className=\"genre-wrapper\">\n          {artist.genres.slice(0, 3).map((genre) => {\n            return <Label size=\"tiny\">{genre}</Label>;\n          })}\n        </div>\n      </div>\n      <div className=\"btn-wrapper\">\n        <button onClick={() => getSimilarArtists(artist.id)}>\n          Make Playlist\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport SingleResult from \"./SingleResult\";\n\nexport default function ResultsContainer({\n  searchResults,\n  setArtist,\n  getSimilarArtists,\n}) {\n  return (\n    <div>\n      {searchResults &&\n        searchResults.map((artist, i) => {\n          return (\n            <SingleResult\n              artist={artist}\n              key={artist.id}\n              index={i}\n              setArtist={setArtist}\n              getSimilarArtists={getSimilarArtists}\n            />\n          );\n        })}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Input, Button } from \"semantic-ui-react\";\n\nexport default function SearchInput({ searchHandler, searchArtists }) {\n  const handleEnterPress = (e) => {\n    if (e.key === \"Enter\") {\n      searchArtists(e);\n    }\n  };\n\n  return (\n    <div className=\"input-wrapper\">\n      <Input\n        className=\"input-search\"\n        placeholder=\"Search Artist...\"\n        size=\"medium\"\n        onChange={(e) => searchHandler(e)}\n        fluid\n        onKeyDown={(e) => handleEnterPress(e)}\n      />\n      {/* Might need button for moible */}\n      {/* <Button onClick={(e) => searchArtists(e)}>Search</Button> */}\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport ResultsContainer from \"./ResultsContainer\";\nimport SearchInput from \"./SearchInput\";\n\nexport default function MainContainer({\n  menuOpen,\n  searchHandler,\n  searchArtists,\n  searchResults,\n  getSimilarArtists,\n}) {\n  return (\n    <div className={`main-container ${menuOpen ? \"\" : \"no-margin\"}`}>\n      <div className=\"container\">\n        <div className=\"main-header\">Search Artist </div>\n        <div\n          className=\"main-image-wrapper\"\n          style={{\n            backgroundImage:\n              \"linear-gradient(to right, rgba(7, 176, 242, 0.3), rgba(7, 176, 242, 0.3)), url('/dj.jpg')\",\n            backgroundBlendMode: \"multiply\",\n            // backgroundImage: \"url(/dj.jpg)\",\n            backgroundPosition: \"top\",\n            // backgroundRepeat: \"no-repeat\",\n            backgroundSize: \"cover\",\n          }}\n        >\n          {/* <Image src=\"dj.jpg\" /> */}\n        </div>\n\n        <SearchInput\n          searchHandler={searchHandler}\n          searchArtists={searchArtists}\n        />\n        <ResultsContainer\n          searchResults={searchResults}\n          getSimilarArtists={getSimilarArtists}\n        />\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Icon } from \"semantic-ui-react\";\n\nexport default function Menu({\n  menuOpen,\n  setSliderWindowOpen,\n  setSearchPageShowing,\n}) {\n  const [btnActive, setBtnActive] = useState(\"favorite\");\n\n  return (\n    <div className={`sidemenu ${menuOpen ? \"active-menu\" : \"\"}`}>\n      <div className=\"button-wrapper\">\n        <div\n          className=\"icon-btn-wrapper\"\n          onClick={() => {\n            setSearchPageShowing(true);\n            setSliderWindowOpen(false);\n            setBtnActive(\"search\");\n          }}\n        >\n          <Icon\n            name=\"search\"\n            size=\"big\"\n            className={`icon-btn ${\n              btnActive === \"search\" ? \"btn-active-icon\" : \"\"\n            }`}\n          />\n          <div className=\"btn-text\">Search Artists</div>\n        </div>\n        <div\n          className=\"icon-btn-wrapper\"\n          onClick={() => {\n            setSearchPageShowing(false);\n            setSliderWindowOpen(false);\n            setBtnActive(\"favorite\");\n          }}\n        >\n          <Icon\n            name=\"favorite\"\n            size=\"big\"\n            className={`icon-btn ${\n              btnActive === \"favorite\" ? \"btn-active-icon\" : \"\"\n            }`}\n          />\n          <div className=\"btn-text\">Favorite Artists</div>\n        </div>\n        <div\n          className=\"icon-btn-wrapper\"\n          onClick={() => {\n            setSearchPageShowing(false);\n            setBtnActive(\"about\");\n          }}\n        >\n          <Icon\n            name=\"question\"\n            size=\"big\"\n            className={`icon-btn ${\n              btnActive === \"about\" ? \"btn-active-icon\" : \"\"\n            }`}\n          />\n          <div className=\"btn-text\">About</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Nav({ setMenuOpen, menuOpen }) {\n  return (\n    <nav>\n      <div className=\"nav-wrapper\">\n        <button onClick={() => setMenuOpen(!menuOpen)}>\n          Menu\n          {/* <FontAwesomeIcon icon={faMusic} /> */}\n        </button>\n      </div>\n    </nav>\n  );\n}\n\n// import React from \"react\";\n// // import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// // import { faMusic } from \"@fortawesome/free-solid-svg-icons\";\n\n// export default function Nav({ setMenuOpen, menuOpen }) {\n//   return (\n//     <nav>\n//       <div className=\"nav-wrapper\">\n//         <button onClick={() => setMenuOpen(!menuOpen)}>\n//           {menuOpen ? \"Menu Open\" : \"Menu Closed\"}\n//           {/* <FontAwesomeIcon icon={faMusic} /> */}\n//         </button>\n//       </div>\n//     </nav>\n//   );\n// }\n","import React, { useState } from \"react\";\nimport { Input, Loader } from \"semantic-ui-react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nexport default function SliderWindow({\n  getTopSongsSimilarArtists,\n  sliderWindowOpen,\n  setSliderWindowOpen,\n  notify,\n}) {\n  const [playlistName, setPlaylistName] = useState(\"\");\n\n  return (\n    <div\n      className={`slider-container ${sliderWindowOpen ? \"slider-open\" : \"\"}`}\n    >\n      <div className=\"controls-before\">\n        <h2>Please name playlist</h2>\n        <Input\n          fluid\n          placeholder=\"Playlist name\"\n          size=\"medium\"\n          onChange={(e) => setPlaylistName(e.target.value)}\n        />\n        <div className=\"btn-container\">\n          <button\n            className={\"btn success\"}\n            onClick={() => {\n              getTopSongsSimilarArtists(playlistName);\n              setSliderWindowOpen(false);\n              notify();\n            }}\n          >\n            Make Playlist\n          </button>\n          <button\n            className={\"btn cancle\"}\n            onClick={() => setSliderWindowOpen(false)}\n          >\n            cancle\n          </button>\n        </div>\n      </div>\n      )\n    </div>\n  );\n}\n\n// export default function SearchInput({ searchHandler, searchArtists }) {\n//   const handleEnterPress = (e) => {\n//     if (e.key === \"Enter\") {\n//       searchArtists(e);\n//     }\n//   };\n\n//   return (\n//     <div className=\"input-wrapper\">\n//       <Input\n//         className=\"input-search\"\n//         placeholder=\"Search Artist...\"\n//         size=\"medium\"\n//         onChange={(e) => searchHandler(e)}\n//         fluid\n//         onKeyDown={(e) => handleEnterPress(e)}\n//       />\n//       {/* Might need button for moible */}\n//       {/* <Button onClick={(e) => searchArtists(e)}>Search</Button> */}\n//     </div>\n//   );\n// }\n","import React from \"react\";\nimport { Grid, Image, Icon } from \"semantic-ui-react\";\n\nexport default function FavoriteArtistCard({ artist, getSimilarArtists }) {\n  return (\n    <Grid.Column>\n      <div className=\"favorite-wrapper\">\n        {/* <a target=\"BLANK\" href={artist.external_urls.spotify}> */}\n        <Image\n          className=\"favorite-image-wrapper\"\n          src={artist.images.length > 0 ? artist.images[1].url : null}\n          // wrapped\n        />\n        {/* </a> */}\n        <div className=\"artist-name-bg\"></div>\n\n        <div className=\"artist-name\">{artist.name}</div>\n        <Icon\n          className=\"artist-play-icon\"\n          size=\"large\"\n          name=\"play circle outline\"\n          onClick={() => getSimilarArtists(artist.id)}\n        />\n      </div>\n    </Grid.Column>\n  );\n}\n","import React from \"react\";\nimport FavoriteArtistCard from \"./FavoriteArtistCard\";\nimport { Grid } from \"semantic-ui-react\";\n\nexport default function FavoriteArtistContainer({\n  myFavoriteArtists,\n  getSimilarArtists,\n}) {\n  console.log(myFavoriteArtists);\n  return (\n    <div>\n      <Grid stackable columns={4} doubling>\n        {myFavoriteArtists &&\n          myFavoriteArtists.map((artist) => {\n            return (\n              <FavoriteArtistCard\n                artist={artist}\n                getSimilarArtists={getSimilarArtists}\n              />\n            );\n          })}\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Label } from \"semantic-ui-react\";\n\nexport default function FavoriteTracksCard({ song }) {\n  console.log(song);\n  return (\n    <div className={\"result-container\"}>\n      <index className=\"index-wrapper\">{/* <div>{index}</div> */}</index>\n      <img\n        className=\"image-wrapper\"\n        src={song.album.images.length > 0 ? song.album.images[1].url : null}\n        alt=\"artist-image\"\n      />\n      <div className=\"text-wrapper\">\n        <div className=\"header\">{song.name}</div>\n        <div className=\"artist-small-wrapper\">\n          {song.artists.map((song, index) => {\n            return <span key={index}>{(index ? \", \" : \"\") + song.name}</span>;\n\n            // return <div>{song.name},</div>;\n          })}\n        </div>\n      </div>\n      {/* <div className=\"btn-wrapper\">\n      <button onClick={() => getSimilarArtists(artist.id)}>\n        Make Playlist\n      </button>\n    </div> */}\n    </div>\n\n    // <div>\n    //   {song.name}\n    //   {song.artists.map((artist) => {\n    //     return <div>{artist.name}</div>;\n    //   })}\n    // </div>\n  );\n}\n","import React from \"react\";\nimport FavoriteTracksCard from \"./FavoriteTracksCard\";\n\nexport default function FavoriteTracksContainer({ myFavoriteTracks }) {\n  return (\n    <div>\n      {myFavoriteTracks &&\n        myFavoriteTracks.map((song) => {\n          return <FavoriteTracksCard song={song} />;\n        })}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport FavoriteArtistContainer from \"./FavoriteArtistContainer\";\nimport FavoriteTracksContainer from \"./FavoriteTracksContainer\";\n\nexport default function MyArtistsContainer({\n  menuOpen,\n  myFavoriteArtists,\n  myFavoriteTracks,\n  getSimilarArtists,\n}) {\n  const [artistsShowing, setArtistShowing] = useState(true);\n\n  return (\n    <div className={`main-container ${menuOpen ? \"\" : \"no-margin\"}`}>\n      <div className=\"container\">\n        <div className=\"main-header\">Recent Favorites</div>\n        <div\n          className=\"main-image-wrapper\"\n          style={{\n            // height: \"300px\",\n            backgroundImage:\n              \"linear-gradient(to right, rgba(7, 176, 242, 0.3), rgba(7, 176, 242, 0.3)), url('/band4.jpg')\",\n            backgroundBlendMode: \"multiply\",\n            backgroundPosition: \"top\",\n            backgroundSize: \"cover\",\n          }}\n        ></div>\n        <div className=\"btn-wrapper\">\n          {/* <button className=\"button-primary\">\n            Make Playlist with Favorites{\" \"}\n          </button> */}\n        </div>\n        <div className=\"selector-words-container flex-horizontal\">\n          <div\n            className={`selector-word ${artistsShowing ? \"active\" : \"\"}`}\n            onClick={() => setArtistShowing(true)}\n          >\n            {\" \"}\n            Artists\n          </div>\n          <div\n            className={`selector-word ${artistsShowing ? \"\" : \"active\"}`}\n            onClick={() => setArtistShowing(false)}\n          >\n            Songs\n          </div>\n        </div>\n        {artistsShowing ? (\n          <FavoriteArtistContainer\n            myFavoriteArtists={myFavoriteArtists}\n            getSimilarArtists={getSimilarArtists}\n          />\n        ) : (\n          <FavoriteTracksContainer myFavoriteTracks={myFavoriteTracks} />\n        )}\n\n        {/* <Tab menu={{ secondary: true, pointing: true }} panes={panes} /> */}\n      </div>\n    </div>\n  );\n}\n","const clientId = \"75512e8899a34ca7a0dce9fb97ef9eab\";\nconst redirectUri = \"http://localhost:3000/\";\nlet accessToken;\n\nfunction shuffle(array) {\n  var currentIndex = array.length,\n    temporaryValue,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nconst Spotify = {\n  getAccessToken() {\n    if (accessToken) {\n      console.log(accessToken);\n      return accessToken;\n    }\n\n    const newAccessToken = window.location.href.match(/access_token=([^&]*)/);\n    const newExpiresIn = window.location.href.match(/expires_in=([^&]*)/);\n    if (newAccessToken && newExpiresIn) {\n      accessToken = newAccessToken[1];\n      const expiresIn = Number(newExpiresIn[1]);\n      window.setTimeout(() => (accessToken = \"\"), expiresIn * 1000);\n      window.history.pushState(\"Access Token\", null, \"/\");\n      console.log(accessToken);\n      return accessToken;\n    } else {\n      const accessUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&show_dialog=true&redirect_uri=${redirectUri}`;\n      console.log(accessToken);\n      window.location = accessUrl;\n    }\n  },\n  searchArtists(searchTerm) {\n    const accessToken = Spotify.getAccessToken();\n    const headers = {\n      Authorization: `Bearer ${accessToken}`,\n    };\n    return fetch(\n      `https://api.spotify.com/v1/search?q=${searchTerm}&type=artist`,\n      {\n        headers: headers,\n      }\n    )\n      .then(\n        (response) => {\n          if (response.ok) {\n            return response.json();\n          }\n          throw new Error(\"Request failed!\");\n        },\n        (networkError) => {\n          console.log(networkError.message);\n        }\n      )\n      .then((jsonResponse) => {\n        return jsonResponse;\n      });\n  },\n\n  getSimilarArtists(id) {\n    const accessToken = Spotify.getAccessToken();\n    const headers = {\n      Authorization: `Bearer ${accessToken}`,\n    };\n    return fetch(`https://api.spotify.com/v1/artists/${id}/related-artists`, {\n      headers: headers,\n    })\n      .then(\n        (response) => {\n          if (response.ok) {\n            return response.json();\n          }\n          throw new Error(\"Request failed!\");\n        },\n        (networkError) => {\n          console.log(networkError.message);\n        }\n      )\n      .then((jsonResponse) => {\n        return jsonResponse;\n      });\n  },\n  getTopSongs(id) {\n    const accessToken = Spotify.getAccessToken();\n    const headers = {\n      Authorization: `Bearer ${accessToken}`,\n    };\n    return fetch(\n      `https://api.spotify.com/v1/artists/${id}/top-tracks?market=ES`,\n      {\n        headers: headers,\n      }\n    )\n      .then(\n        (response) => {\n          if (response.ok) {\n            return response.json();\n          }\n          throw new Error(\"Request failed!\");\n        },\n        (networkError) => {\n          console.log(networkError.message);\n        }\n      )\n      .then((jsonResponse) => {\n        // console.log(jsonResponse);\n        let filteredResponse = jsonResponse.tracks.map((track) => ({\n          uri: track.uri,\n        }));\n        return filteredResponse.slice(0, 4);\n      });\n  },\n\n  getUsersTopArtists() {\n    const accessToken = Spotify.getAccessToken();\n    const headers = {\n      Authorization: `Bearer ${accessToken}`,\n    };\n    return fetch(\n      ` https://api.spotify.com/v1/me/top/artists?time_range=short_term&limit=30&offset=0`,\n      {\n        headers: headers,\n      }\n    )\n      .then(\n        (response) => {\n          if (response.ok) {\n            return response.json();\n          }\n          throw new Error(\"Request failed!\");\n        },\n        (networkError) => {\n          console.log(networkError.message);\n        }\n      )\n      .then((jsonResponse) => {\n        return jsonResponse.items;\n        console.log(jsonResponse);\n      });\n  },\n  getUsersTopTracks() {\n    const accessToken = Spotify.getAccessToken();\n    const headers = {\n      Authorization: `Bearer ${accessToken}`,\n    };\n    return fetch(\n      ` https://api.spotify.com/v1/me/top/tracks?time_range=short_term&limit=30&offset=0`,\n      {\n        headers: headers,\n      }\n    )\n      .then(\n        (response) => {\n          if (response.ok) {\n            return response.json();\n          }\n          throw new Error(\"Request failed!\");\n        },\n        (networkError) => {\n          console.log(networkError.message);\n        }\n      )\n      .then((jsonResponse) => {\n        console.log(jsonResponse, \"TOP SONGS\");\n        return jsonResponse.items;\n      });\n  },\n\n  getMyDetails() {\n    const accessToken = Spotify.getAccessToken();\n    const headers = {\n      Authorization: `Bearer ${accessToken}`,\n    };\n    return fetch(\"https://api.spotify.com/v1/me\", { headers: headers }).then(\n      (response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(\"Request failed!\");\n      },\n      (networkError) => {\n        console.log(networkError.message);\n      }\n    );\n  },\n  savePlaylist(playlistName, trackURIs) {\n    if (playlistName && trackURIs.length) {\n      const accessToken = Spotify.getAccessToken();\n      const headers = {\n        Authorization: `Bearer ${accessToken}`,\n      };\n      let userID;\n      let playlistID;\n      return fetch(\"https://api.spotify.com/v1/me\", { headers: headers })\n        .then(\n          (response) => {\n            if (response.ok) {\n              return response.json();\n            }\n            throw new Error(\"Request failed!\");\n          },\n          (networkError) => {\n            console.log(networkError.message);\n          }\n        )\n        .then((jsonResponse) => {\n          userID = jsonResponse.id;\n          return fetch(`https://api.spotify.com/v1/users/${userID}/playlists`, {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify({ name: playlistName }),\n          })\n            .then(\n              (response) => {\n                if (response.ok) {\n                  return response.json();\n                }\n                throw new Error(\"Request failed!\");\n              },\n              (networkError) => {\n                console.log(networkError.message);\n              }\n            )\n            .then((jsonResponse) => {\n              playlistID = jsonResponse.id;\n              return fetch(\n                `https://api.spotify.com/v1/users/${userID}/playlists/${playlistID}/tracks`,\n                {\n                  method: \"POST\",\n                  headers: headers,\n                  body: JSON.stringify({ uris: trackURIs }),\n                }\n              )\n                .then(\n                  (response) => {\n                    if (response.ok) {\n                      return response.json();\n                    }\n                    throw new Error(\"Request failed!\");\n                  },\n                  (networkError) => {\n                    console.log(networkError.message);\n                  }\n                )\n                .then((jsonResponse) => jsonResponse);\n            });\n        });\n    } else {\n      return;\n    }\n  },\n};\n\nexport default Spotify;\n","import React, { useState, useEffect } from \"react\";\nimport MainConatiner from \"./components/MainContainer\";\nimport Menu from \"./components/Menu\";\nimport Nav from \"./components/Nav\";\nimport MyModal from \"./components/MyModal\";\nimport SliderWindow from \"./components/SliderWindow\";\nimport MyArtistContainer from \"./components/MyArtistContainer\";\nimport Spotify from \"./utils/spotify\";\n\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./styles/app.scss\";\n\nfunction App() {\n  const [accessToken, setAccessToken] = useState(null);\n  const [myDetails, setMyDetails] = useState({});\n  const [myFavoriteArtists, setMyFavoriteArtists] = useState([]);\n  const [myFavoriteTracks, setMyFavoriteTracks] = useState([]);\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [playlistWasCreated, setPlaylistWasCreated] = useState(false);\n\n  const getAccessToken = (e) => {\n    // const results = Spotify.getAccessToken();\n    // setAccessToken(results);\n    e.preventDefault();\n    Spotify.getAccessToken().then((token) => {\n      console.log(token);\n      setAccessToken(token);\n    });\n  };\n\n  useEffect(() => {\n    // console.log(\"calling useffect\");\n    const results = Spotify.getAccessToken();\n    setAccessToken(results);\n\n    Spotify.getMyDetails().then((results) => {\n      console.log(results);\n      setMyDetails(results);\n    });\n    Spotify.getUsersTopArtists().then((favArtists) => {\n      setMyFavoriteArtists(favArtists);\n    });\n    Spotify.getUsersTopTracks().then((favTracks) => {\n      setMyFavoriteTracks(favTracks);\n    });\n  }, []);\n\n  const searchHandler = (e) => {\n    e.preventDefault();\n    console.log(e.target.value);\n    setSearchTerm(e.target.value);\n  };\n\n  const searchArtists = (e) => {\n    e.preventDefault();\n    Spotify.searchArtists(searchTerm).then((results) => {\n      setSearchResults(results.artists.items);\n      console.log(results.artists.items);\n    });\n  };\n\n  const [artist, setArtist] = useState([]);\n  const [similarArtists, setSimilarArtists] = useState([]);\n\n  const getSimilarArtists = (artistID) => {\n    // e.preventDefault();\n    setSliderWindowOpen(true);\n    setModalOpen(true);\n    Spotify.getSimilarArtists(artistID).then((results) => {\n      console.log(results);\n      setSimilarArtists(results.artists);\n    });\n  };\n\n  const getTopSongsSimilarArtists = async (playListName) => {\n    // e.preventDefault();\n    let artistSongArray = [];\n\n    await similarArtists.map((artist) => {\n      Spotify.getTopSongs(artist.id).then((results) => {\n        artistSongArray.push(results);\n        console.log(artistSongArray);\n      });\n    });\n    setTimeout(() => {\n      let flattened = artistSongArray.flat();\n      let mapped = [].concat(...flattened.map(Object.values));\n      console.log(mapped, \"this is the final array\");\n      let name = playListName;\n      let songURI = mapped;\n      Spotify.savePlaylist(name, songURI);\n    }, 3000);\n  };\n\n  const [menuOpen, setMenuOpen] = useState(true);\n  const [sliderWindowOpen, setSliderWindowOpen] = useState(false);\n  // Making playlist time\n  const [searchPageShowing, setSearchPageShowing] = useState(false);\n\n  const notify = () =>\n    toast.success(\"Playlist Created!\", {\n      position: \"bottom-right\",\n      autoClose: 2000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n\n  return (\n    <div className=\"App\">\n      <Nav menuOpen={menuOpen} setMenuOpen={setMenuOpen} />\n      {searchPageShowing ? (\n        <>\n          <MainConatiner\n            menuOpen={menuOpen}\n            searchHandler={searchHandler}\n            searchArtists={searchArtists}\n            searchResults={searchResults}\n            getSimilarArtists={getSimilarArtists}\n          />\n\n          {/* <MyModal\n            modalOpen={modalOpen}\n            setModalOpen={setModalOpen}\n            getTopSongsSimilarArtists={getTopSongsSimilarArtists}\n          /> */}\n\n          <SliderWindow\n            sliderWindowOpen={sliderWindowOpen}\n            setSliderWindowOpen={setSliderWindowOpen}\n            getTopSongsSimilarArtists={getTopSongsSimilarArtists}\n            notify={notify}\n          />\n          <ToastContainer\n            position=\"bottom-right\"\n            autoClose={5000}\n            hideProgressBar\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n          />\n        </>\n      ) : (\n        <>\n          <MyArtistContainer\n            menuOpen={menuOpen}\n            accessToken={accessToken}\n            myDetails={myDetails}\n            myFavoriteArtists={myFavoriteArtists}\n            myFavoriteTracks={myFavoriteTracks}\n            getSimilarArtists={getSimilarArtists}\n          />\n          <SliderWindow\n            sliderWindowOpen={sliderWindowOpen}\n            setSliderWindowOpen={setSliderWindowOpen}\n            getTopSongsSimilarArtists={getTopSongsSimilarArtists}\n            notify={notify}\n          />\n          <ToastContainer\n            position=\"bottom-right\"\n            autoClose={5000}\n            hideProgressBar\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n          />\n        </>\n      )}\n\n      <Menu\n        setSliderWindowOpen={setSliderWindowOpen}\n        menuOpen={menuOpen}\n        getAccessToken={getAccessToken}\n        setSearchPageShowing={setSearchPageShowing}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}