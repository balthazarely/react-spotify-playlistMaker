{"version":3,"sources":["components/SingleResult.jsx","components/ResultsContainer.jsx","components/SearchInput.jsx","components/MainContainer.jsx","components/Menu.jsx","components/Nav.jsx","components/SliderWindow.jsx","components/SliderWindowBottom.jsx","components/FavoriteArtistCard.jsx","components/FavoriteArtistContainer.jsx","components/FavoriteTracksCard.jsx","components/FavoriteTracksContainer.jsx","components/MyArtistContainer.jsx","utils/spotify.js","utils/helpers.js","App.js","reportWebVitals.js","index.js"],"names":["SingleResult","artist","index","getSimilarArtists","className","src","images","length","url","alt","name","genres","slice","map","genre","Label","size","onClick","id","ResultsContainer","searchResults","setArtist","i","SearchInput","searchHandler","searchArtists","Input","placeholder","onChange","e","fluid","onKeyDown","key","handleEnterPress","MainContainer","menuOpen","style","backgroundImage","backgroundBlendMode","backgroundPosition","backgroundSize","Menu","setSliderWindowOpen","setSliderWindowBottomOpen","setSearchPageShowing","myDetails","useState","btnActive","setBtnActive","Icon","display_name","Nav","setMenuOpen","SliderWindow","getTopSongsSimilarArtists","sliderWindowOpen","notify","playlistName","setPlaylistName","inputValue","setInputValue","value","target","SliderWindowBottom","sliderWindowBottomOpen","makePlaylistFromSong","FavoriteArtistCard","Grid","Column","Image","FavoriteArtistContainer","myFavoriteArtists","console","log","stackable","columns","doubling","FavoriteTracksCard","song","updateUsesTools","getSimilarSongsRecomendations","usesTools","album","artists","class","type","label","checkHandler","FavoriteTracksContainer","myFavoriteTracks","MyArtistsContainer","showPlaylistBtnSongs","artistsShowing","setArtistShowing","accessToken","Spotify","getAccessToken","newAccessToken","window","location","href","match","newExpiresIn","expiresIn","Number","setTimeout","history","pushState","accessUrl","searchTerm","headers","Authorization","fetch","then","response","ok","json","Error","networkError","message","jsonResponse","getTopSongs","tracks","track","uri","getUsersTopArtists","items","getUsersTopTracks","getMyDetails","makePlaylistFromArtistAndSong","songId","savePlaylist","trackURIs","userID","playlistID","method","body","JSON","stringify","uris","shuffle","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","App","setAccessToken","setMyDetails","setMyFavoriteArtists","setMyFavoriteTracks","setSearchTerm","setSearchResults","searchPageShowing","useEffect","results","favArtists","favTracks","similarArtists","setSimilarArtists","artistID","playListName","a","notifyError","artistSongArray","push","flattened","flat","mapped","concat","Object","values","songURI","setUsesTools","playlistname","item","result","toast","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","error","preventDefault","newestOnTop","rtl","pauseOnFocusLoss","includes","filter","tool","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2dfcf739.chunk.js","sourcesContent":["import React from \"react\";\nimport { Label } from \"semantic-ui-react\";\n\nexport default function SingleResult({ artist, index, getSimilarArtists }) {\n  return (\n    <div className={\"result-container\"}>\n      <index className=\"index-wrapper\">\n        <div>{index}</div>\n      </index>\n      <img\n        className=\"image-wrapper\"\n        src={artist.images.length > 0 ? artist.images[1].url : null}\n        alt=\"artist-image\"\n      />\n      <div className=\"text-wrapper\">\n        <div className=\"header\">{artist.name}</div>\n        <div className=\"genre-wrapper\">\n          {artist.genres.slice(0, 3).map((genre) => {\n            return <Label size=\"tiny\">{genre}</Label>;\n          })}\n        </div>\n      </div>\n      <div className=\"btn-wrapper\">\n        <button onClick={() => getSimilarArtists(artist.id)}>\n          Make Playlist\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport SingleResult from \"./SingleResult\";\n\nexport default function ResultsContainer({\n  searchResults,\n  setArtist,\n  getSimilarArtists,\n}) {\n  return (\n    <div>\n      {searchResults &&\n        searchResults.map((artist, i) => {\n          return (\n            <SingleResult\n              artist={artist}\n              key={artist.id}\n              index={i}\n              setArtist={setArtist}\n              getSimilarArtists={getSimilarArtists}\n            />\n          );\n        })}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Input, Button } from \"semantic-ui-react\";\n\nexport default function SearchInput({ searchHandler, searchArtists }) {\n  const handleEnterPress = (e) => {\n    if (e.key === \"Enter\") {\n      searchArtists(e);\n    }\n  };\n\n  return (\n    <div className=\"input-wrapper\">\n      <Input\n        className=\"input-search\"\n        placeholder=\"Search Artist...\"\n        size=\"medium\"\n        onChange={(e) => searchHandler(e)}\n        fluid\n        onKeyDown={(e) => handleEnterPress(e)}\n      />\n      {/* Might need button for moible */}\n      {/* <Button onClick={(e) => searchArtists(e)}>Search</Button> */}\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport ResultsContainer from \"./ResultsContainer\";\nimport SearchInput from \"./SearchInput\";\n\nexport default function MainContainer({\n  menuOpen,\n  searchHandler,\n  searchArtists,\n  searchResults,\n  getSimilarArtists,\n}) {\n  return (\n    <div className={`main-container ${menuOpen ? \"\" : \"no-margin\"}`}>\n      <div className=\"container\">\n        <div className=\"main-header\">Search Artist </div>\n\n        <div\n          className=\"main-image-wrapper\"\n          style={{\n            backgroundImage:\n              \"linear-gradient(to right, rgba(7, 176, 242, 0.3), rgba(7, 176, 242, 0.3)), url('/dj.jpg')\",\n            backgroundBlendMode: \"multiply\",\n            backgroundPosition: \"top\",\n\n            backgroundSize: \"cover\",\n          }}\n        ></div>\n        <SearchInput\n          searchHandler={searchHandler}\n          searchArtists={searchArtists}\n        />\n        <ResultsContainer\n          searchResults={searchResults}\n          getSimilarArtists={getSimilarArtists}\n        />\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Icon } from \"semantic-ui-react\";\n\nexport default function Menu({\n  menuOpen,\n  setSliderWindowOpen,\n  setSliderWindowBottomOpen,\n  setSearchPageShowing,\n  myDetails,\n}) {\n  const [btnActive, setBtnActive] = useState(\"favorite\");\n\n  return (\n    <div className={`sidemenu ${menuOpen ? \"active-menu\" : \"\"}`}>\n      <div className=\"button-wrapper\">\n        <div\n          className=\"icon-btn-wrapper\"\n          onClick={() => {\n            setSearchPageShowing(true);\n            setSliderWindowOpen(false);\n            setBtnActive(\"search\");\n          }}\n        >\n          <Icon\n            name=\"search\"\n            size=\"big\"\n            className={`icon-btn ${\n              btnActive === \"search\" ? \"btn-active-icon\" : \"\"\n            }`}\n          />\n          <div className=\"btn-text\">Search Artists</div>\n        </div>\n        <div\n          className=\"icon-btn-wrapper\"\n          onClick={() => {\n            setSearchPageShowing(false);\n            setSliderWindowOpen(false);\n            setSliderWindowBottomOpen(false);\n            setBtnActive(\"favorite\");\n          }}\n        >\n          <Icon\n            name=\"favorite\"\n            size=\"big\"\n            className={`icon-btn ${\n              btnActive === \"favorite\" ? \"btn-active-icon\" : \"\"\n            }`}\n          />\n          <div className=\"btn-text\">Favorite Artists</div>\n        </div>\n        <div\n          className=\"icon-btn-wrapper\"\n          onClick={() => {\n            setSearchPageShowing(false);\n            setBtnActive(\"about\");\n          }}\n        >\n          <Icon\n            name=\"question\"\n            size=\"big\"\n            className={`icon-btn ${\n              btnActive === \"about\" ? \"btn-active-icon\" : \"\"\n            }`}\n          />\n          <div className=\"btn-text\">About</div>\n\n          {/* <div className=\"profile-container\">\n            {myDetails.display_name ? (\n              <>\n                <div className=\"my-profile-photo\">\n                  <img src={myDetails.images[0].url} />\n                </div>\n                <div className=\"my-profile-name\">{myDetails.display_name}</div>\n               \n              </>\n            ) : null}\n          </div> */}\n          {myDetails.display_name ? <div>{myDetails.display_name}</div> : null}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Nav({ setMenuOpen, menuOpen }) {\n  return (\n    <nav>\n      <div className=\"nav-wrapper\">\n        <button onClick={() => setMenuOpen(!menuOpen)}>Menu</button>\n      </div>\n    </nav>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Input, Loader } from \"semantic-ui-react\";\n\nexport default function SliderWindow({\n  getTopSongsSimilarArtists,\n  sliderWindowOpen,\n  setSliderWindowOpen,\n  notify,\n}) {\n  const [playlistName, setPlaylistName] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n\n  return (\n    <div\n      className={`slider-container ${sliderWindowOpen ? \"slider-open\" : \"\"}`}\n    >\n      <div className=\"controls-before\">\n        <h2>Please name playlist</h2>\n        <Input\n          fluid\n          placeholder=\"Playlist name\"\n          size=\"medium\"\n          value={inputValue}\n          onChange={(e) => {\n            setPlaylistName(e.target.value);\n            setInputValue(e.target.value);\n          }}\n        />\n        <div className=\"btn-container\">\n          <button\n            className={\"btn success\"}\n            onClick={() => {\n              getTopSongsSimilarArtists(playlistName);\n              setSliderWindowOpen(false);\n              setInputValue(\"\");\n            }}\n          >\n            Make Playlist\n          </button>\n          <button\n            className={\"btn cancle\"}\n            onClick={() => {\n              setSliderWindowOpen(false);\n              setInputValue(\"\");\n            }}\n          >\n            cancel\n          </button>\n        </div>\n      </div>\n      )\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Input, Loader } from \"semantic-ui-react\";\n\nexport default function SliderWindowBottom({\n  sliderWindowBottomOpen,\n  setSliderWindowBottomOpen,\n  makePlaylistFromSong,\n  notify,\n}) {\n  const [playlistName, setPlaylistName] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n\n  return (\n    <div\n      className={`slider-container ${\n        sliderWindowBottomOpen ? \"slider-open\" : \"\"\n      }`}\n    >\n      <div className=\"controls-before\">\n        <h2>Please name playlist</h2>\n        <Input\n          fluid\n          placeholder=\"Playlist name\"\n          size=\"medium\"\n          value={inputValue}\n          onChange={(e) => {\n            setPlaylistName(e.target.value);\n            setInputValue(e.target.value);\n          }}\n        />\n        <div className=\"btn-container\">\n          <button\n            className={\"btn success\"}\n            onClick={() => {\n              makePlaylistFromSong(playlistName);\n              setSliderWindowBottomOpen(false);\n              setInputValue(\"\");\n            }}\n          >\n            Make Playlist\n          </button>\n          <button\n            className={\"btn cancle\"}\n            onClick={() => {\n              setSliderWindowBottomOpen(false);\n              setInputValue(\"\");\n            }}\n          >\n            cancle\n          </button>\n        </div>\n      </div>\n      )\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Grid, Image, Icon } from \"semantic-ui-react\";\n\nexport default function FavoriteArtistCard({ artist, getSimilarArtists }) {\n  return (\n    <Grid.Column>\n      <div className=\"favorite-wrapper\">\n        <Image\n          className=\"favorite-image-wrapper\"\n          src={artist.images.length > 0 ? artist.images[1].url : null}\n        />\n        <div className=\"artist-name-bg\"></div>\n        <div className=\"artist-name\">{artist.name}</div>\n        <Icon\n          className=\"artist-play-icon\"\n          size=\"large\"\n          name=\"play circle outline\"\n          onClick={() => getSimilarArtists(artist.id)}\n        />\n      </div>\n    </Grid.Column>\n  );\n}\n","import React from \"react\";\nimport FavoriteArtistCard from \"./FavoriteArtistCard\";\nimport { Grid } from \"semantic-ui-react\";\n\nexport default function FavoriteArtistContainer({\n  myFavoriteArtists,\n  getSimilarArtists,\n}) {\n  console.log(myFavoriteArtists);\n  return (\n    <div>\n      <Grid stackable columns={4} doubling>\n        {myFavoriteArtists &&\n          myFavoriteArtists.map((artist) => {\n            return (\n              <FavoriteArtistCard\n                artist={artist}\n                getSimilarArtists={getSimilarArtists}\n              />\n            );\n          })}\n      </Grid>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Label, Checkbox } from \"semantic-ui-react\";\n\nexport default function FavoriteTracksCard({\n  song,\n  index,\n  getSimilarSongsRecomendations,\n  usesTools,\n  updateUsesTools,\n}) {\n  const checkHandler = (e) => {\n    const tools = usesTools; //Array in parent component\n    const value = e.target.value; //Checkbox value\n    updateUsesTools(value);\n  };\n  return (\n    <div className={\"result-container\"}>\n      <index className=\"index-wrapper\">\n        <div>{index + 1}</div>\n      </index>\n      <img\n        className=\"image-wrapper\"\n        src={song.album.images.length > 0 ? song.album.images[1].url : null}\n        alt=\"artist-image\"\n      />\n      <div className=\"text-wrapper\">\n        <div className=\"header\">{song.name}</div>\n        <div className=\"artist-small-wrapper\">\n          {song.artists.slice(0, 6).map((song, index) => {\n            return <span key={index}>{(index ? \", \" : \"\") + song.name}</span>;\n          })}\n        </div>\n      </div>\n      {/* <div className=\"btn-wrapper\"> */}\n      <div class=\"checkbox-wrapper\">\n        <input\n          type=\"checkbox\"\n          id=\"test1\"\n          className=\"checkmark\"\n          label=\"Add\"\n          value={song.id}\n          onChange={(e) => checkHandler(e)}\n        />\n\n        {/* <button\n          onClick={() =>\n            getSimilarSongsRecomendations(song.artists[0].id, song.id)\n          }\n        >\n          Make Playlist\n        </button> */}\n      </div>{\" \"}\n      {/* </div> */}\n    </div>\n  );\n}\n","import React from \"react\";\nimport FavoriteTracksCard from \"./FavoriteTracksCard\";\n\nexport default function FavoriteTracksContainer({\n  myFavoriteTracks,\n  getSimilarSongsRecomendations,\n  //\n\n  usesTools,\n  updateUsesTools,\n}) {\n  return (\n    <div className=\"favorite-songs-container\">\n      {myFavoriteTracks &&\n        myFavoriteTracks.map((song, index) => {\n          return (\n            <FavoriteTracksCard\n              song={song}\n              getSimilarSongsRecomendations={getSimilarSongsRecomendations}\n              index={index}\n              //\n\n              usesTools={usesTools}\n              updateUsesTools={updateUsesTools}\n            />\n          );\n        })}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport FavoriteArtistContainer from \"./FavoriteArtistContainer\";\nimport FavoriteTracksContainer from \"./FavoriteTracksContainer\";\n\nexport default function MyArtistsContainer({\n  menuOpen,\n  myFavoriteArtists,\n  myFavoriteTracks,\n  getSimilarArtists,\n  showPlaylistBtnSongs,\n  getSimilarSongsRecomendations,\n  setSliderWindowBottomOpen,\n  setSliderWindowOpen,\n  //\n  usesTools,\n  updateUsesTools,\n}) {\n  const [artistsShowing, setArtistShowing] = useState(true);\n  // console.log(myDetails);\n\n  return (\n    <div className={`main-container ${menuOpen ? \"\" : \"no-margin\"}`}>\n      <div\n        className={`favorite-add-btn-sticky-btm ${\n          usesTools.length > 0 ? \"\" : \"hidden\"\n        }`}\n      >\n        <div>\n          <button\n            className=\"button-primary\"\n            onClick={() => setSliderWindowBottomOpen(true)}\n          >\n            MAKE PLAYLIST\n          </button>\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"main-header\">Recent Favorites</div>\n        <div\n          className=\"main-image-wrapper\"\n          style={{\n            backgroundImage:\n              \"linear-gradient(to right, rgba(7, 176, 242, 0.3), rgba(7, 176, 242, 0.3)), url('/dj2.jpg')\",\n            backgroundBlendMode: \"darken\",\n            backgroundPosition: \"top\",\n            backgroundSize: \"cover\",\n          }}\n        ></div>\n        <div className=\"btn-wrapper\"></div>\n\n        <div className=\"selector-words-container flex-horizontal-spaced\">\n          <div className=\"selector-word-wrapper\">\n            <div\n              className={`selector-word ${artistsShowing ? \"active\" : \"\"}`}\n              onClick={() => {\n                setArtistShowing(true);\n                setSliderWindowBottomOpen(false);\n                setSliderWindowOpen(false);\n              }}\n            >\n              Artists\n            </div>\n            <div\n              className={`selector-word ${artistsShowing ? \"\" : \"active\"}`}\n              onClick={() => {\n                setArtistShowing(false);\n                setSliderWindowBottomOpen(false);\n                setSliderWindowOpen(false);\n              }}\n            >\n              Songs\n            </div>\n          </div>\n\n          {/* <>\n            <div\n              className={`playlist-btn-wrapper ${\n                usesTools.length > 0 ? \"\" : \"hidden\"\n              }`}\n            >\n              <button\n                className=\"button-primary\"\n                onClick={() => setSliderWindowBottomOpen(true)}\n              >\n                MAKE PLAYLIST\n              </button>\n            </div>\n          </> */}\n        </div>\n        {artistsShowing ? (\n          <FavoriteArtistContainer\n            myFavoriteArtists={myFavoriteArtists}\n            getSimilarArtists={getSimilarArtists}\n          />\n        ) : (\n          <FavoriteTracksContainer\n            myFavoriteTracks={myFavoriteTracks}\n            getSimilarSongsRecomendations={getSimilarSongsRecomendations}\n            //\n\n            usesTools={usesTools}\n            updateUsesTools={updateUsesTools}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n","const clientId = \"75512e8899a34ca7a0dce9fb97ef9eab\";\nconst redirectUri = \"https://hot-jam.surge.sh/\";\nlet accessToken;\n\nconst Spotify = {\n  getAccessToken() {\n    if (accessToken) {\n      console.log(accessToken);\n      return accessToken;\n    }\n\n    const newAccessToken = window.location.href.match(/access_token=([^&]*)/);\n    const newExpiresIn = window.location.href.match(/expires_in=([^&]*)/);\n    if (newAccessToken && newExpiresIn) {\n      accessToken = newAccessToken[1];\n      const expiresIn = Number(newExpiresIn[1]);\n      window.setTimeout(() => (accessToken = \"\"), expiresIn * 1000);\n      window.history.pushState(\"Access Token\", null, \"/\");\n      console.log(accessToken);\n      return accessToken;\n    } else {\n      const accessUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=user-read-recently-played user-top-read playlist-modify-public&show_dialog=true&redirect_uri=${redirectUri}`;\n      console.log(accessToken);\n      window.location = accessUrl;\n    }\n  },\n  searchArtists(searchTerm) {\n    const accessToken = Spotify.getAccessToken();\n    const headers = {\n      Authorization: `Bearer ${accessToken}`,\n    };\n    return fetch(\n      `https://api.spotify.com/v1/search?q=${searchTerm}&type=artist`,\n      {\n        headers: headers,\n      }\n    )\n      .then(\n        (response) => {\n          if (response.ok) {\n            return response.json();\n          }\n          throw new Error(\"Request failed!\");\n        },\n        (networkError) => {\n          console.log(networkError.message);\n        }\n      )\n      .then((jsonResponse) => {\n        return jsonResponse;\n      });\n  },\n\n  getSimilarArtists(id) {\n    const accessToken = Spotify.getAccessToken();\n    const headers = {\n      Authorization: `Bearer ${accessToken}`,\n    };\n    return fetch(`https://api.spotify.com/v1/artists/${id}/related-artists`, {\n      headers: headers,\n    })\n      .then(\n        (response) => {\n          if (response.ok) {\n            return response.json();\n          }\n          throw new Error(\"Request failed!\");\n        },\n        (networkError) => {\n          console.log(networkError.message);\n        }\n      )\n      .then((jsonResponse) => {\n        return jsonResponse;\n      });\n  },\n  getTopSongs(id) {\n    const accessToken = Spotify.getAccessToken();\n    const headers = {\n      Authorization: `Bearer ${accessToken}`,\n    };\n    return fetch(\n      `https://api.spotify.com/v1/artists/${id}/top-tracks?market=ES`,\n      {\n        headers: headers,\n      }\n    )\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        //   throw new Error(\"Request failed!\");\n        // },\n        // (networkError) => {\n        //   console.log(networkError.message);\n      })\n      .then((jsonResponse) => {\n        // console.log(jsonResponse);\n        let filteredResponse = jsonResponse.tracks.map((track) => ({\n          uri: track.uri,\n        }));\n        return filteredResponse.slice(0, 4);\n      });\n  },\n\n  getUsersTopArtists() {\n    const accessToken = Spotify.getAccessToken();\n    const headers = {\n      Authorization: `Bearer ${accessToken}`,\n    };\n    return fetch(\n      // ` https://api.spotify.com/v1/me/top/artists`,\n      ` https://api.spotify.com/v1/me/top/artists?time_range=short_term&limit=30&offset=0`,\n\n      {\n        headers: headers,\n      }\n    )\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        //     throw new Error(\"Request failed!\");\n        //   },\n        //   (networkError) => {\n        //     console.log(networkError.message);\n      })\n      .then((jsonResponse) => {\n        return jsonResponse.items;\n      });\n  },\n  getUsersTopTracks() {\n    const accessToken = Spotify.getAccessToken();\n    const headers = {\n      Authorization: `Bearer ${accessToken}`,\n    };\n    return fetch(\n      // ` https://api.spotify.com/v1/me/top/tracks`,\n      ` https://api.spotify.com/v1/me/top/tracks?time_range=short_term&limit=30&offset=0`,\n\n      {\n        headers: headers,\n      }\n    )\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        //   throw new Error(\"Request failed!\");\n        // },\n        // (networkError) => {\n        //   console.log(networkError.message);\n      })\n      .then((jsonResponse) => {\n        console.log(jsonResponse, \"TOP SONGS\");\n        return jsonResponse.items;\n      });\n  },\n\n  getMyDetails() {\n    const accessToken = Spotify.getAccessToken();\n    const headers = {\n      Authorization: `Bearer ${accessToken}`,\n    };\n    return fetch(\"https://api.spotify.com/v1/me\", { headers: headers }).then(\n      (response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(\"Request failed!\");\n      },\n      (networkError) => {\n        console.log(networkError.message);\n      }\n    );\n  },\n\n  makePlaylistFromArtistAndSong(songId) {\n    const accessToken = Spotify.getAccessToken();\n    const headers = {\n      Authorization: `Bearer ${accessToken}`,\n    };\n    return fetch(\n      `https://api.spotify.com/v1/recommendations?seed_tracks=${songId}`,\n      { headers: headers }\n    ).then(\n      (response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(\"Request failed!\");\n      },\n      (networkError) => {\n        console.log(networkError.message);\n      }\n    );\n  },\n  savePlaylist(playlistName, trackURIs) {\n    if (playlistName && trackURIs.length) {\n      const accessToken = Spotify.getAccessToken();\n      const headers = {\n        Authorization: `Bearer ${accessToken}`,\n      };\n      let userID;\n      let playlistID;\n      return fetch(\"https://api.spotify.com/v1/me\", { headers: headers })\n        .then(\n          (response) => {\n            if (response.ok) {\n              return response.json();\n            }\n            throw new Error(\"Request failed!\");\n          },\n          (networkError) => {\n            console.log(networkError.message);\n          }\n        )\n        .then((jsonResponse) => {\n          userID = jsonResponse.id;\n          return fetch(`https://api.spotify.com/v1/users/${userID}/playlists`, {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify({ name: playlistName }),\n          })\n            .then(\n              (response) => {\n                if (response.ok) {\n                  return response.json();\n                }\n                throw new Error(\"Request failed!\");\n              },\n              (networkError) => {\n                console.log(networkError.message);\n              }\n            )\n            .then((jsonResponse) => {\n              playlistID = jsonResponse.id;\n              return fetch(\n                `https://api.spotify.com/v1/users/${userID}/playlists/${playlistID}/tracks`,\n                {\n                  method: \"POST\",\n                  headers: headers,\n                  body: JSON.stringify({ uris: trackURIs }),\n                }\n              )\n                .then(\n                  (response) => {\n                    if (response.ok) {\n                      return response.json();\n                    }\n                    throw new Error(\"Request failed!\");\n                  },\n                  (networkError) => {\n                    console.log(networkError.message);\n                  }\n                )\n                .then((jsonResponse) => jsonResponse);\n            });\n        });\n    } else {\n      return;\n    }\n  },\n};\n\nexport default Spotify;\n","export default function shuffle(array) {\n  var currentIndex = array.length,\n    temporaryValue,\n    randomIndex;\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n  return array;\n}\n","import React, { useState, useEffect } from \"react\";\nimport MainConatiner from \"./components/MainContainer\";\nimport Menu from \"./components/Menu\";\nimport Nav from \"./components/Nav\";\nimport SliderWindow from \"./components/SliderWindow\";\nimport SliderWindowBottom from \"./components/SliderWindowBottom\";\nimport MyArtistContainer from \"./components/MyArtistContainer\";\nimport Spotify from \"./utils/spotify\";\nimport shuffle from \"./utils/helpers\";\n\n// Martin127792\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./styles/app.scss\";\n\nfunction App() {\n  const [accessToken, setAccessToken] = useState(null);\n  const [myDetails, setMyDetails] = useState({});\n\n  // User infomation\n  const [myFavoriteArtists, setMyFavoriteArtists] = useState([]);\n  const [myFavoriteTracks, setMyFavoriteTracks] = useState([]);\n  // Search hanlers\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  // Apperance\n  const [menuOpen, setMenuOpen] = useState(true);\n  const [sliderWindowOpen, setSliderWindowOpen] = useState(false);\n  const [sliderWindowBottomOpen, setSliderWindowBottomOpen] = useState(false);\n  const [showPlaylistBtnSongs, setShowPlaylistBtnSongs] = useState(true);\n\n  // THis is my shit version of a tab that i made.\n  const [searchPageShowing, setSearchPageShowing] = useState(false);\n\n  const getAccessToken = (e) => {\n    console.log(\"its going\");\n    const results = Spotify.getAccessToken();\n    setAccessToken(results);\n  };\n\n  // On Mount, initialize app\n  useEffect(() => {\n    const results = Spotify.getAccessToken();\n    setAccessToken(results);\n\n    Spotify.getMyDetails().then((results) => {\n      console.log(results);\n      setMyDetails(results);\n    });\n    Spotify.getUsersTopArtists().then((favArtists) => {\n      setMyFavoriteArtists(favArtists);\n    });\n    Spotify.getUsersTopTracks().then((favTracks) => {\n      setMyFavoriteTracks(favTracks);\n    });\n  }, []);\n\n  const searchHandler = (e) => {\n    e.preventDefault();\n    console.log(e.target.value);\n    setSearchTerm(e.target.value);\n  };\n\n  const searchArtists = (e) => {\n    e.preventDefault();\n    Spotify.searchArtists(searchTerm).then((results) => {\n      setSearchResults(results.artists.items);\n      console.log(results.artists.items);\n    });\n  };\n\n  // Playlist Making hooks\n  const [similarArtists, setSimilarArtists] = useState([]);\n  // FROM THE SEED\n  const [\n    similarArtistsTrackSeedReco,\n    setSimilarArtistsTrackSeedReco,\n  ] = useState([]);\n\n  const getSimilarArtists = (artistID) => {\n    setSliderWindowOpen(true);\n    Spotify.getSimilarArtists(artistID).then((results) => {\n      console.log(results);\n      setSimilarArtists(results.artists);\n    });\n  };\n\n  const getTopSongsSimilarArtists = async (playListName) => {\n    if (similarArtists.length === 0) {\n      console.log(\"sorry, noe enoguth related artists\");\n      notifyError();\n      return;\n    } else {\n      let artistSongArray = [];\n      await similarArtists.map((artist) => {\n        Spotify.getTopSongs(artist.id).then((results) => {\n          artistSongArray.push(results);\n        });\n      });\n      setTimeout(() => {\n        let flattened = artistSongArray.flat();\n        let mapped = [].concat(...flattened.map(Object.values));\n        // console.log(mapped, \"this is the final array\");\n        let name = playListName;\n        let songURI = shuffle(mapped);\n        Spotify.savePlaylist(name, songURI);\n      }, 2000);\n      notify();\n    }\n  };\n\n  const [usesTools, setUsesTools] = useState([]);\n  const updateUsesTools = (item) => {\n    if (usesTools.includes(item)) {\n      setUsesTools(usesTools.filter((tool) => tool != item));\n    } else {\n      setUsesTools([...usesTools, item]); // or push\n    }\n  };\n\n  // Need to add the condition to NOT make a platlist like above if there isnt enought data\n\n  const makePlaylistFromSong = async (playlistname) => {\n    let array = [];\n    await usesTools.map((item) => {\n      Spotify.makePlaylistFromArtistAndSong(item).then((result) => {\n        result.tracks.map((item) => {\n          console.log(item.uri);\n          array.push(item.uri);\n        });\n      });\n    });\n    setTimeout(() => {\n      if (array.length === 0) {\n        notifyError();\n        return;\n      } else {\n        let name = playlistname;\n        let songURI = shuffle(array);\n        Spotify.savePlaylist(name, songURI);\n      }\n    }, 2000);\n    notify();\n  };\n\n  const notify = () =>\n    toast.info(\"Playlist Created!\", {\n      position: \"bottom-right\",\n      autoClose: 2000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n\n  const notifyError = () =>\n    toast.error(\"Not enough similar artists\", {\n      position: \"bottom-right\",\n      autoClose: 2000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n\n  return (\n    <div className=\"App\">\n      <Nav menuOpen={menuOpen} setMenuOpen={setMenuOpen} />\n      {searchPageShowing ? (\n        <>\n          <MainConatiner\n            menuOpen={menuOpen}\n            searchHandler={searchHandler}\n            searchArtists={searchArtists}\n            searchResults={searchResults}\n            getSimilarArtists={getSimilarArtists}\n          />\n          <SliderWindow\n            sliderWindowOpen={sliderWindowOpen}\n            setSliderWindowOpen={setSliderWindowOpen}\n            getTopSongsSimilarArtists={getTopSongsSimilarArtists}\n            notify={notify}\n          />\n\n          <ToastContainer\n            position=\"bottom-right\"\n            autoClose={5000}\n            hideProgressBar\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n          />\n        </>\n      ) : (\n        <>\n          <MyArtistContainer\n            menuOpen={menuOpen}\n            accessToken={accessToken}\n            myFavoriteArtists={myFavoriteArtists}\n            myFavoriteTracks={myFavoriteTracks}\n            getSimilarArtists={getSimilarArtists}\n            showPlaylistBtnSongs={showPlaylistBtnSongs}\n            usesTools={usesTools}\n            updateUsesTools={updateUsesTools}\n            makePlaylistFromSong={makePlaylistFromSong}\n            setSliderWindowBottomOpen={setSliderWindowBottomOpen}\n            setSliderWindowOpen={setSliderWindowOpen}\n          />\n          <SliderWindow\n            sliderWindowOpen={sliderWindowOpen}\n            setSliderWindowOpen={setSliderWindowOpen}\n            getTopSongsSimilarArtists={getTopSongsSimilarArtists}\n            notify={notify}\n          />\n          <SliderWindowBottom\n            sliderWindowBottomOpen={sliderWindowBottomOpen}\n            setSliderWindowBottomOpen={setSliderWindowBottomOpen}\n            makePlaylistFromSong={makePlaylistFromSong}\n            notify={notify}\n          />\n          <ToastContainer\n            position=\"bottom-right\"\n            autoClose={5000}\n            hideProgressBar\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n          />\n        </>\n      )}\n      <Menu\n        setSliderWindowOpen={setSliderWindowOpen}\n        menuOpen={menuOpen}\n        getAccessToken={getAccessToken}\n        setSearchPageShowing={setSearchPageShowing}\n        setSliderWindowBottomOpen={setSliderWindowBottomOpen}\n        myDetails={myDetails}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}