{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/balthazarely/Desktop/Development/Projects/balthazar-music-memoery/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Login from \"./components/Login\";\nimport Playlist from \"./components/Playlist\";\nimport Spotify from \"./utils/spotify\";\nimport \"./styles/app.scss\";\n\nfunction App() {\n  _s();\n\n  const [accessToken, setAccessToken] = useState(null);\n  const [myDetails, setMyDetails] = useState({});\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [artist, setArtist] = useState([]);\n  const [similarArtists, setSimilarArtists] = useState([]);\n  const [similarSongUID, setSimilarSongUID] = useState([]);\n\n  const getAccessToken = () => {\n    const results = Spotify.getAccessToken();\n    setAccessToken(results);\n  };\n\n  const getDetails = () => {\n    const results = Spotify.getMyDetails().then(results => {\n      console.log(results);\n    });\n    setMyDetails(results);\n  };\n\n  const searchHandler = e => {\n    e.preventDefault();\n    console.log(e.target.value);\n    setSearchTerm(e.target.value);\n  };\n\n  const searchArtists = e => {\n    e.preventDefault();\n    Spotify.searchArtists(searchTerm).then(results => {\n      setSearchResults(results.artists.items);\n      console.log(results.artists.items);\n    });\n  };\n\n  const selectArtist = artist => {\n    setArtist(artist);\n    console.log(artist);\n  };\n\n  const getSimilarArtists = e => {\n    e.preventDefault();\n    Spotify.getSimilarArtists(artist.id).then(results => {\n      console.log(results);\n      setSimilarArtists(results.artists);\n    });\n  };\n\n  const getTopSongsSimilarArtists = async e => {\n    e.preventDefault();\n    let artistSongArray = [];\n    await similarArtists.map(artist => {\n      Spotify.getTopSongs(artist.id).then(results => {\n        artistSongArray.push(results);\n        console.log(artistSongArray);\n      });\n    });\n    setTimeout(() => {\n      let flattened = artistSongArray.flat();\n      let mapped = [].concat(...flattened.map(Object.values)); // let mapped = flattened.map((item) => item);\n\n      console.log(mapped, \"this is the final array\");\n      let name = \"test Playlist 1\";\n      let songURI = mapped;\n      Spotify.savePlaylist(name, songURI);\n    }, 1000); // this needs to go inside the map above\n    // let flattened = artistSongArray.flat();\n    // let mapped = flattened.map((item) => item.id);\n    // console.log(artistSongArray, \"this is the final array\");\n  }; // e.preventDefault();\n  // let artistSongArray = [];\n  // similarArtists.map((artist) => {\n  //   Spotify.getTopSongs(artist.id).then((results) => {\n  //     artistSongArray.push(results);\n  //   });\n  // });\n  // };\n  // const makePlaylist = () => {\n  //   let name = \"test Playlist 12312\";\n  //   let songURI = [playlist.uri];\n  //   Spotify.savePlaylist(name, songURI);\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getAccessToken,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getDetails,\n      children: \"getDetails\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"search\",\n        onChange: e => searchHandler(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: searchArtists,\n        children: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), searchTerm]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: searchResults && searchResults.map(artist => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => selectArtist(artist),\n          children: [artist.name, \" |\"]\n        }, artist.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"2px solid red\"\n      },\n      children: [artist.name, \" | \", artist.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => getSimilarArtists(e),\n      children: \"FIND SIMs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => getTopSongsSimilarArtists(e),\n      children: \"getTopSongsSimilarArtists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => Spotify.getUsersTopArtists(),\n      children: \"User TOP USER DATA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), similarArtists && similarArtists.map(artist => artist.name)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"wmrnl0mZFSgLa3BzGiiCqkJUtHk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/balthazarely/Desktop/Development/Projects/balthazar-music-memoery/src/App.js"],"names":["React","useState","useEffect","Login","Playlist","Spotify","App","accessToken","setAccessToken","myDetails","setMyDetails","searchTerm","setSearchTerm","searchResults","setSearchResults","artist","setArtist","similarArtists","setSimilarArtists","similarSongUID","setSimilarSongUID","getAccessToken","results","getDetails","getMyDetails","then","console","log","searchHandler","e","preventDefault","target","value","searchArtists","artists","items","selectArtist","getSimilarArtists","id","getTopSongsSimilarArtists","artistSongArray","map","getTopSongs","push","setTimeout","flattened","flat","mapped","concat","Object","values","name","songURI","savePlaylist","border","getUsersTopArtists"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Login from \"./components/Login\";\nimport Playlist from \"./components/Playlist\";\nimport Spotify from \"./utils/spotify\";\nimport \"./styles/app.scss\";\n\nfunction App() {\n  const [accessToken, setAccessToken] = useState(null);\n  const [myDetails, setMyDetails] = useState({});\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [artist, setArtist] = useState([]);\n  const [similarArtists, setSimilarArtists] = useState([]);\n  const [similarSongUID, setSimilarSongUID] = useState([]);\n\n  const getAccessToken = () => {\n    const results = Spotify.getAccessToken();\n    setAccessToken(results);\n  };\n  const getDetails = () => {\n    const results = Spotify.getMyDetails().then((results) => {\n      console.log(results);\n    });\n    setMyDetails(results);\n  };\n\n  const searchHandler = (e) => {\n    e.preventDefault();\n    console.log(e.target.value);\n    setSearchTerm(e.target.value);\n  };\n\n  const searchArtists = (e) => {\n    e.preventDefault();\n    Spotify.searchArtists(searchTerm).then((results) => {\n      setSearchResults(results.artists.items);\n      console.log(results.artists.items);\n    });\n  };\n\n  const selectArtist = (artist) => {\n    setArtist(artist);\n    console.log(artist);\n  };\n\n  const getSimilarArtists = (e) => {\n    e.preventDefault();\n    Spotify.getSimilarArtists(artist.id).then((results) => {\n      console.log(results);\n      setSimilarArtists(results.artists);\n    });\n  };\n\n  const getTopSongsSimilarArtists = async (e) => {\n    e.preventDefault();\n    let artistSongArray = [];\n\n    await similarArtists.map((artist) => {\n      Spotify.getTopSongs(artist.id).then((results) => {\n        artistSongArray.push(results);\n        console.log(artistSongArray);\n      });\n    });\n    setTimeout(() => {\n      let flattened = artistSongArray.flat();\n      let mapped = [].concat(...flattened.map(Object.values));\n      // let mapped = flattened.map((item) => item);\n      console.log(mapped, \"this is the final array\");\n      let name = \"test Playlist 1\";\n      let songURI = mapped;\n      Spotify.savePlaylist(name, songURI);\n    }, 1000);\n\n    // this needs to go inside the map above\n    // let flattened = artistSongArray.flat();\n    // let mapped = flattened.map((item) => item.id);\n    // console.log(artistSongArray, \"this is the final array\");\n  };\n\n  // e.preventDefault();\n  // let artistSongArray = [];\n  // similarArtists.map((artist) => {\n  //   Spotify.getTopSongs(artist.id).then((results) => {\n  //     artistSongArray.push(results);\n  //   });\n  // });\n  // };\n\n  // const makePlaylist = () => {\n  //   let name = \"test Playlist 12312\";\n  //   let songURI = [playlist.uri];\n  //   Spotify.savePlaylist(name, songURI);\n  // };\n\n  return (\n    <div className=\"App\">\n      <button onClick={getAccessToken}>Login</button>\n      <button onClick={getDetails}>getDetails</button>\n      {/* <button onClick={makePlaylist}>makePlaylist</button> */}\n\n      <form>\n        <input placeholder=\"search\" onChange={(e) => searchHandler(e)}></input>\n        <button onClick={searchArtists}>search</button>\n        {searchTerm}\n      </form>\n\n      <ul>\n        {searchResults &&\n          searchResults.map((artist) => {\n            return (\n              <li key={artist.id} onClick={() => selectArtist(artist)}>\n                {artist.name} |\n              </li>\n            );\n          })}\n      </ul>\n      <div style={{ border: \"2px solid red\" }}>\n        {artist.name} | {artist.id}\n      </div>\n      <button onClick={(e) => getSimilarArtists(e)}>FIND SIMs</button>\n      <button onClick={(e) => getTopSongsSimilarArtists(e)}>\n        getTopSongsSimilarArtists\n      </button>\n      <button onClick={() => Spotify.getUsersTopArtists()}>\n        User TOP USER DATA\n      </button>\n\n      {similarArtists && similarArtists.map((artist) => artist.name)}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}