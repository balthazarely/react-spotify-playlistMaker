{"ast":null,"code":"var clientId=\"75512e8899a34ca7a0dce9fb97ef9eab\";var redirectUri=\"http://localhost:3000/\";var accessToken;function shuffle(array){var currentIndex=array.length,temporaryValue,randomIndex;// While there remain elements to shuffle...\nwhile(0!==currentIndex){// Pick a remaining element...\nrandomIndex=Math.floor(Math.random()*currentIndex);currentIndex-=1;// And swap it with the current element.\ntemporaryValue=array[currentIndex];array[currentIndex]=array[randomIndex];array[randomIndex]=temporaryValue;}return array;}var Spotify={getAccessToken:function getAccessToken(){if(accessToken){console.log(accessToken);return accessToken;}var newAccessToken=window.location.href.match(/access_token=([^&]*)/);var newExpiresIn=window.location.href.match(/expires_in=([^&]*)/);if(newAccessToken&&newExpiresIn){accessToken=newAccessToken[1];var expiresIn=Number(newExpiresIn[1]);window.setTimeout(function(){return accessToken=\"\";},expiresIn*1000);window.history.pushState(\"Access Token\",null,\"/\");console.log(accessToken);return accessToken;}else{var accessUrl=\"https://accounts.spotify.com/authorize?client_id=\".concat(clientId,\"&response_type=token&scope=playlist-modify-public&show_dialog=true&redirect_uri=\").concat(redirectUri);console.log(accessToken);window.location=accessUrl;}},searchArtists:function searchArtists(searchTerm){var accessToken=Spotify.getAccessToken();var headers={Authorization:\"Bearer \".concat(accessToken)};return fetch(\"https://api.spotify.com/v1/search?q=\".concat(searchTerm,\"&type=artist\"),{headers:headers}).then(function(response){if(response.ok){return response.json();}throw new Error(\"Request failed!\");},function(networkError){console.log(networkError.message);}).then(function(jsonResponse){return jsonResponse;});},getSimilarArtists:function getSimilarArtists(id){var accessToken=Spotify.getAccessToken();var headers={Authorization:\"Bearer \".concat(accessToken)};return fetch(\"https://api.spotify.com/v1/artists/\".concat(id,\"/related-artists\"),{headers:headers}).then(function(response){if(response.ok){return response.json();}throw new Error(\"Request failed!\");},function(networkError){console.log(networkError.message);}).then(function(jsonResponse){return jsonResponse;});},getTopSongs:function getTopSongs(id){var accessToken=Spotify.getAccessToken();var headers={Authorization:\"Bearer \".concat(accessToken)};return fetch(\"https://api.spotify.com/v1/artists/\".concat(id,\"/top-tracks?market=ES\"),{headers:headers}).then(function(response){if(response.ok){return response.json();}throw new Error(\"Request failed!\");},function(networkError){console.log(networkError.message);}).then(function(jsonResponse){// console.log(jsonResponse);\nvar filteredResponse=jsonResponse.tracks.map(function(track){return{uri:track.uri};});return filteredResponse.slice(0,4);});},getUsersTopArtists:function getUsersTopArtists(){var accessToken=Spotify.getAccessToken();var headers={Authorization:\"Bearer \".concat(accessToken)};return fetch(\" https://api.spotify.com/v1/me/top/artists?time_range=short_term&limit=30&offset=0\",{headers:headers}).then(function(response){if(response.ok){return response.json();}throw new Error(\"Request failed!\");},function(networkError){console.log(networkError.message);}).then(function(jsonResponse){return jsonResponse.items;console.log(jsonResponse);});},getUsersTopTracks:function getUsersTopTracks(){var accessToken=Spotify.getAccessToken();var headers={Authorization:\"Bearer \".concat(accessToken)};return fetch(\" https://api.spotify.com/v1/me/top/tracks?time_range=short_term&limit=30&offset=0\",{headers:headers}).then(function(response){if(response.ok){return response.json();}throw new Error(\"Request failed!\");},function(networkError){console.log(networkError.message);}).then(function(jsonResponse){console.log(jsonResponse,\"TOP SONGS\");return jsonResponse.items;});},getMyDetails:function getMyDetails(){var accessToken=Spotify.getAccessToken();var headers={Authorization:\"Bearer \".concat(accessToken)};return fetch(\"https://api.spotify.com/v1/me\",{headers:headers}).then(function(response){if(response.ok){return response.json();}throw new Error(\"Request failed!\");},function(networkError){console.log(networkError.message);});},savePlaylist:function savePlaylist(playlistName,trackURIs){if(playlistName&&trackURIs.length){var _accessToken=Spotify.getAccessToken();var headers={Authorization:\"Bearer \".concat(_accessToken)};var userID;var playlistID;return fetch(\"https://api.spotify.com/v1/me\",{headers:headers}).then(function(response){if(response.ok){return response.json();}throw new Error(\"Request failed!\");},function(networkError){console.log(networkError.message);}).then(function(jsonResponse){userID=jsonResponse.id;return fetch(\"https://api.spotify.com/v1/users/\".concat(userID,\"/playlists\"),{method:\"POST\",headers:headers,body:JSON.stringify({name:playlistName})}).then(function(response){if(response.ok){return response.json();}throw new Error(\"Request failed!\");},function(networkError){console.log(networkError.message);}).then(function(jsonResponse){playlistID=jsonResponse.id;return fetch(\"https://api.spotify.com/v1/users/\".concat(userID,\"/playlists/\").concat(playlistID,\"/tracks\"),{method:\"POST\",headers:headers,body:JSON.stringify({uris:trackURIs})}).then(function(response){if(response.ok){return response.json();}throw new Error(\"Request failed!\");},function(networkError){console.log(networkError.message);}).then(function(jsonResponse){return jsonResponse;});});});}else{return;}}};export default Spotify;","map":{"version":3,"sources":["/Users/balthazarely/Desktop/Development/Projects/react-spotify-playlistMaker/src/utils/spotify.js"],"names":["clientId","redirectUri","accessToken","shuffle","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","Spotify","getAccessToken","console","log","newAccessToken","window","location","href","match","newExpiresIn","expiresIn","Number","setTimeout","history","pushState","accessUrl","searchArtists","searchTerm","headers","Authorization","fetch","then","response","ok","json","Error","networkError","message","jsonResponse","getSimilarArtists","id","getTopSongs","filteredResponse","tracks","map","track","uri","slice","getUsersTopArtists","items","getUsersTopTracks","getMyDetails","savePlaylist","playlistName","trackURIs","userID","playlistID","method","body","JSON","stringify","name","uris"],"mappings":"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","sourcesContent":["const clientId = \"75512e8899a34ca7a0dce9fb97ef9eab\";\nconst redirectUri = \"http://localhost:3000/\";\nlet accessToken;\n\nfunction shuffle(array) {\n  var currentIndex = array.length,\n    temporaryValue,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nconst Spotify = {\n  getAccessToken() {\n    if (accessToken) {\n      console.log(accessToken);\n      return accessToken;\n    }\n\n    const newAccessToken = window.location.href.match(/access_token=([^&]*)/);\n    const newExpiresIn = window.location.href.match(/expires_in=([^&]*)/);\n    if (newAccessToken && newExpiresIn) {\n      accessToken = newAccessToken[1];\n      const expiresIn = Number(newExpiresIn[1]);\n      window.setTimeout(() => (accessToken = \"\"), expiresIn * 1000);\n      window.history.pushState(\"Access Token\", null, \"/\");\n      console.log(accessToken);\n      return accessToken;\n    } else {\n      const accessUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&show_dialog=true&redirect_uri=${redirectUri}`;\n      console.log(accessToken);\n      window.location = accessUrl;\n    }\n  },\n  searchArtists(searchTerm) {\n    const accessToken = Spotify.getAccessToken();\n    const headers = {\n      Authorization: `Bearer ${accessToken}`,\n    };\n    return fetch(\n      `https://api.spotify.com/v1/search?q=${searchTerm}&type=artist`,\n      {\n        headers: headers,\n      }\n    )\n      .then(\n        (response) => {\n          if (response.ok) {\n            return response.json();\n          }\n          throw new Error(\"Request failed!\");\n        },\n        (networkError) => {\n          console.log(networkError.message);\n        }\n      )\n      .then((jsonResponse) => {\n        return jsonResponse;\n      });\n  },\n\n  getSimilarArtists(id) {\n    const accessToken = Spotify.getAccessToken();\n    const headers = {\n      Authorization: `Bearer ${accessToken}`,\n    };\n    return fetch(`https://api.spotify.com/v1/artists/${id}/related-artists`, {\n      headers: headers,\n    })\n      .then(\n        (response) => {\n          if (response.ok) {\n            return response.json();\n          }\n          throw new Error(\"Request failed!\");\n        },\n        (networkError) => {\n          console.log(networkError.message);\n        }\n      )\n      .then((jsonResponse) => {\n        return jsonResponse;\n      });\n  },\n  getTopSongs(id) {\n    const accessToken = Spotify.getAccessToken();\n    const headers = {\n      Authorization: `Bearer ${accessToken}`,\n    };\n    return fetch(\n      `https://api.spotify.com/v1/artists/${id}/top-tracks?market=ES`,\n      {\n        headers: headers,\n      }\n    )\n      .then(\n        (response) => {\n          if (response.ok) {\n            return response.json();\n          }\n          throw new Error(\"Request failed!\");\n        },\n        (networkError) => {\n          console.log(networkError.message);\n        }\n      )\n      .then((jsonResponse) => {\n        // console.log(jsonResponse);\n        let filteredResponse = jsonResponse.tracks.map((track) => ({\n          uri: track.uri,\n        }));\n        return filteredResponse.slice(0, 4);\n      });\n  },\n\n  getUsersTopArtists() {\n    const accessToken = Spotify.getAccessToken();\n    const headers = {\n      Authorization: `Bearer ${accessToken}`,\n    };\n    return fetch(\n      ` https://api.spotify.com/v1/me/top/artists?time_range=short_term&limit=30&offset=0`,\n      {\n        headers: headers,\n      }\n    )\n      .then(\n        (response) => {\n          if (response.ok) {\n            return response.json();\n          }\n          throw new Error(\"Request failed!\");\n        },\n        (networkError) => {\n          console.log(networkError.message);\n        }\n      )\n      .then((jsonResponse) => {\n        return jsonResponse.items;\n        console.log(jsonResponse);\n      });\n  },\n  getUsersTopTracks() {\n    const accessToken = Spotify.getAccessToken();\n    const headers = {\n      Authorization: `Bearer ${accessToken}`,\n    };\n    return fetch(\n      ` https://api.spotify.com/v1/me/top/tracks?time_range=short_term&limit=30&offset=0`,\n      {\n        headers: headers,\n      }\n    )\n      .then(\n        (response) => {\n          if (response.ok) {\n            return response.json();\n          }\n          throw new Error(\"Request failed!\");\n        },\n        (networkError) => {\n          console.log(networkError.message);\n        }\n      )\n      .then((jsonResponse) => {\n        console.log(jsonResponse, \"TOP SONGS\");\n        return jsonResponse.items;\n      });\n  },\n\n  getMyDetails() {\n    const accessToken = Spotify.getAccessToken();\n    const headers = {\n      Authorization: `Bearer ${accessToken}`,\n    };\n    return fetch(\"https://api.spotify.com/v1/me\", { headers: headers }).then(\n      (response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(\"Request failed!\");\n      },\n      (networkError) => {\n        console.log(networkError.message);\n      }\n    );\n  },\n  savePlaylist(playlistName, trackURIs) {\n    if (playlistName && trackURIs.length) {\n      const accessToken = Spotify.getAccessToken();\n      const headers = {\n        Authorization: `Bearer ${accessToken}`,\n      };\n      let userID;\n      let playlistID;\n      return fetch(\"https://api.spotify.com/v1/me\", { headers: headers })\n        .then(\n          (response) => {\n            if (response.ok) {\n              return response.json();\n            }\n            throw new Error(\"Request failed!\");\n          },\n          (networkError) => {\n            console.log(networkError.message);\n          }\n        )\n        .then((jsonResponse) => {\n          userID = jsonResponse.id;\n          return fetch(`https://api.spotify.com/v1/users/${userID}/playlists`, {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify({ name: playlistName }),\n          })\n            .then(\n              (response) => {\n                if (response.ok) {\n                  return response.json();\n                }\n                throw new Error(\"Request failed!\");\n              },\n              (networkError) => {\n                console.log(networkError.message);\n              }\n            )\n            .then((jsonResponse) => {\n              playlistID = jsonResponse.id;\n              return fetch(\n                `https://api.spotify.com/v1/users/${userID}/playlists/${playlistID}/tracks`,\n                {\n                  method: \"POST\",\n                  headers: headers,\n                  body: JSON.stringify({ uris: trackURIs }),\n                }\n              )\n                .then(\n                  (response) => {\n                    if (response.ok) {\n                      return response.json();\n                    }\n                    throw new Error(\"Request failed!\");\n                  },\n                  (networkError) => {\n                    console.log(networkError.message);\n                  }\n                )\n                .then((jsonResponse) => jsonResponse);\n            });\n        });\n    } else {\n      return;\n    }\n  },\n};\n\nexport default Spotify;\n"]},"metadata":{},"sourceType":"module"}