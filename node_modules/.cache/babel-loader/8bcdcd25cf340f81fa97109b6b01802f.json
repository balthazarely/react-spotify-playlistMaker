{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/balthazarely/Desktop/Development/Projects/react-spotify-playlistMaker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MainConatiner from \"./components/MainContainer\";\nimport Menu from \"./components/Menu\";\nimport Nav from \"./components/Nav\";\nimport MyModal from \"./components/MyModal\";\nimport Login from \"./components/Login\";\nimport Playlist from \"./components/Playlist\";\nimport Spotify from \"./utils/spotify\";\nimport \"./styles/app.scss\";\n\nfunction App() {\n  _s();\n\n  const [accessToken, setAccessToken] = useState(null);\n  const [myDetails, setMyDetails] = useState({});\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  const getAccessToken = () => {\n    const results = Spotify.getAccessToken();\n    setAccessToken(results);\n  };\n\n  const getDetails = () => {\n    const results = Spotify.getMyDetails().then(results => {\n      console.log(results);\n    });\n    setMyDetails(results);\n  };\n\n  const searchHandler = e => {\n    e.preventDefault();\n    console.log(e.target.value);\n    setSearchTerm(e.target.value);\n  };\n\n  const searchArtists = e => {\n    e.preventDefault();\n    Spotify.searchArtists(searchTerm).then(results => {\n      setSearchResults(results.artists.items);\n      console.log(results.artists.items);\n    });\n  }; // const selectArtist = (artist) => {\n  //   setArtist(artist);\n  //   console.log(artist);\n  // };\n\n\n  const [artist, setArtist] = useState([]);\n  const [similarArtists, setSimilarArtists] = useState([]);\n\n  const getSimilarArtists = artistID => {\n    // e.preventDefault();\n    Spotify.getSimilarArtists(artistID).then(results => {\n      console.log(results);\n      setSimilarArtists(results.artists);\n      setMenuOpen(true);\n    });\n  };\n\n  const getTopSongsSimilarArtists = async e => {\n    e.preventDefault();\n    let artistSongArray = [];\n    await similarArtists.map(artist => {\n      Spotify.getTopSongs(artist.id).then(results => {\n        artistSongArray.push(results);\n        console.log(artistSongArray);\n      });\n    });\n    setTimeout(() => {\n      let flattened = artistSongArray.flat();\n      let mapped = [].concat(...flattened.map(Object.values));\n      console.log(mapped, \"this is the final array\");\n      let name = \"test Playlist 1\";\n      let songURI = mapped;\n      Spotify.savePlaylist(name, songURI);\n    }, 3000);\n  };\n\n  const [menuOpen, setMenuOpen] = useState(true); // Making playlist time\n\n  const [chosenArtistForPlaylist, setChosenArtistForPlaylist] = useState(\"\");\n  const [modalOpen, setModalOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [artist.name, /*#__PURE__*/_jsxDEV(Nav, {\n      menuOpen: menuOpen,\n      setMenuOpen: setMenuOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainConatiner, {\n      menuOpen: menuOpen,\n      searchHandler: searchHandler,\n      searchArtists: searchArtists,\n      searchResults: searchResults,\n      getSimilarArtists: getSimilarArtists\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      modalOpen: modalOpen,\n      setModalOpen: setModalOpen,\n      getTopSongsSimilarArtists: getTopSongsSimilarArtists\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      menuOpen: menuOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"tg1uOtLgZypMQ1Ix2CaLezI+4LY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/balthazarely/Desktop/Development/Projects/react-spotify-playlistMaker/src/App.js"],"names":["React","useState","useEffect","MainConatiner","Menu","Nav","MyModal","Login","Playlist","Spotify","App","accessToken","setAccessToken","myDetails","setMyDetails","searchTerm","setSearchTerm","searchResults","setSearchResults","getAccessToken","results","getDetails","getMyDetails","then","console","log","searchHandler","e","preventDefault","target","value","searchArtists","artists","items","artist","setArtist","similarArtists","setSimilarArtists","getSimilarArtists","artistID","setMenuOpen","getTopSongsSimilarArtists","artistSongArray","map","getTopSongs","id","push","setTimeout","flattened","flat","mapped","concat","Object","values","name","songURI","savePlaylist","menuOpen","chosenArtistForPlaylist","setChosenArtistForPlaylist","modalOpen","setModalOpen"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport MainConatiner from \"./components/MainContainer\";\nimport Menu from \"./components/Menu\";\nimport Nav from \"./components/Nav\";\nimport MyModal from \"./components/MyModal\";\nimport Login from \"./components/Login\";\nimport Playlist from \"./components/Playlist\";\nimport Spotify from \"./utils/spotify\";\nimport \"./styles/app.scss\";\n\nfunction App() {\n  const [accessToken, setAccessToken] = useState(null);\n  const [myDetails, setMyDetails] = useState({});\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  const getAccessToken = () => {\n    const results = Spotify.getAccessToken();\n    setAccessToken(results);\n  };\n  const getDetails = () => {\n    const results = Spotify.getMyDetails().then((results) => {\n      console.log(results);\n    });\n    setMyDetails(results);\n  };\n\n  const searchHandler = (e) => {\n    e.preventDefault();\n    console.log(e.target.value);\n    setSearchTerm(e.target.value);\n  };\n\n  const searchArtists = (e) => {\n    e.preventDefault();\n    Spotify.searchArtists(searchTerm).then((results) => {\n      setSearchResults(results.artists.items);\n      console.log(results.artists.items);\n    });\n  };\n\n  // const selectArtist = (artist) => {\n  //   setArtist(artist);\n  //   console.log(artist);\n  // };\n\n  const [artist, setArtist] = useState([]);\n  const [similarArtists, setSimilarArtists] = useState([]);\n\n  const getSimilarArtists = (artistID) => {\n    // e.preventDefault();\n    Spotify.getSimilarArtists(artistID).then((results) => {\n      console.log(results);\n      setSimilarArtists(results.artists);\n      setMenuOpen(true);\n    });\n  };\n\n  const getTopSongsSimilarArtists = async (e) => {\n    e.preventDefault();\n    let artistSongArray = [];\n\n    await similarArtists.map((artist) => {\n      Spotify.getTopSongs(artist.id).then((results) => {\n        artistSongArray.push(results);\n        console.log(artistSongArray);\n      });\n    });\n    setTimeout(() => {\n      let flattened = artistSongArray.flat();\n      let mapped = [].concat(...flattened.map(Object.values));\n      console.log(mapped, \"this is the final array\");\n      let name = \"test Playlist 1\";\n      let songURI = mapped;\n      Spotify.savePlaylist(name, songURI);\n    }, 3000);\n  };\n\n  const [menuOpen, setMenuOpen] = useState(true);\n\n  // Making playlist time\n  const [chosenArtistForPlaylist, setChosenArtistForPlaylist] = useState(\"\");\n  const [modalOpen, setModalOpen] = useState(false);\n\n  return (\n    <div className=\"App\">\n      {artist.name}\n      {/* <button onClick={getAccessToken}>Login</button>\n      <button onClick={getDetails}>getDetails</button>\n      <form>\n        <input placeholder=\"search\" onChange={(e) => searchHandler(e)}></input>\n        <button onClick={searchArtists}>search</button>\n        {searchTerm}\n      </form>\n      <ul>\n        {searchResults &&\n          searchResults.map((artist) => {\n            return (\n              <li key={artist.id} onClick={() => selectArtist(artist)}>\n                {artist.name} |\n              </li>\n            );\n          })}\n      </ul>\n      <div style={{ border: \"2px solid red\" }}>\n        {artist.name} | {artist.id}\n      </div>\n      <button onClick={(e) => getSimilarArtists(e)}>FIND SIMs</button>\n      <button onClick={(e) => getTopSongsSimilarArtists(e)}>\n        getTopSongsSimilarArtists\n      </button>\n      <button onClick={() => Spotify.getUsersTopArtists()}>\n        User TOP USER DATA\n      </button>\n\n      {similarArtists && similarArtists.map((artist) => artist.name)} */}\n      <Nav menuOpen={menuOpen} setMenuOpen={setMenuOpen} />\n      <MainConatiner\n        menuOpen={menuOpen}\n        searchHandler={searchHandler}\n        searchArtists={searchArtists}\n        searchResults={searchResults}\n        getSimilarArtists={getSimilarArtists}\n      />\n\n      <MyModal\n        modalOpen={modalOpen}\n        setModalOpen={setModalOpen}\n        getTopSongsSimilarArtists={getTopSongsSimilarArtists}\n      />\n      <Menu menuOpen={menuOpen} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}