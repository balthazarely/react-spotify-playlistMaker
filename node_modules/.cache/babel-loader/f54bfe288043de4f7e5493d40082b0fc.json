{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/balthazarely/Desktop/Development/Projects/react-spotify-playlistMaker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MainConatiner from \"./components/MainContainer\";\nimport Menu from \"./components/Menu\";\nimport Nav from \"./components/Nav\";\nimport MyModal from \"./components/MyModal\";\nimport SliderWindow from \"./components/SliderWindow\";\nimport MyArtistContainer from \"./components/MyArtistContainer\";\nimport Spotify from \"./utils/spotify\";\nimport shuffle from \"./utils/helpers\"; // Martin127792\n\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./styles/app.scss\";\n\nfunction App() {\n  _s();\n\n  const [accessToken, setAccessToken] = useState(null);\n  const [myDetails, setMyDetails] = useState({});\n  const [myFavoriteArtists, setMyFavoriteArtists] = useState([]);\n  const [myFavoriteTracks, setMyFavoriteTracks] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  const getAccessToken = e => {\n    console.log(\"its going\");\n    const results = Spotify.getAccessToken();\n    setAccessToken(results);\n  };\n\n  useEffect(() => {\n    const results = Spotify.getAccessToken();\n    setAccessToken(results);\n    Spotify.getMyDetails().then(results => {\n      console.log(results);\n      setMyDetails(results);\n    });\n    Spotify.getUsersTopArtists().then(favArtists => {\n      setMyFavoriteArtists(favArtists);\n    });\n    Spotify.getUsersTopTracks().then(favTracks => {\n      setMyFavoriteTracks(favTracks);\n    });\n    Spotify.makePlaylistFromArtistAndSong(\"10gzBoINW3cLJfZUka8Zoe\", \"58R30o2zynpgdvG5Nxfur8\").then(result => {\n      console.log(result);\n    });\n  }, []);\n\n  const searchHandler = e => {\n    e.preventDefault();\n    console.log(e.target.value);\n    setSearchTerm(e.target.value);\n  };\n\n  const searchArtists = e => {\n    e.preventDefault();\n    Spotify.searchArtists(searchTerm).then(results => {\n      setSearchResults(results.artists.items);\n      console.log(results.artists.items);\n    });\n  };\n\n  const [similarArtists, setSimilarArtists] = useState([]);\n\n  const getSimilarArtists = artistID => {\n    setSliderWindowOpen(true);\n    Spotify.getSimilarArtists(artistID).then(results => {\n      console.log(results);\n      setSimilarArtists(results.artists);\n    });\n  };\n\n  const getTopSongsSimilarArtists = async playListName => {\n    let artistSongArray = [];\n    await similarArtists.map(artist => {\n      Spotify.getTopSongs(artist.id).then(results => {\n        artistSongArray.push(results); // console.log(artistSongArray);\n      });\n    });\n    setTimeout(() => {\n      let flattened = artistSongArray.flat();\n      let mapped = [].concat(...flattened.map(Object.values)); // console.log(mapped, \"this is the final array\");\n\n      let name = playListName;\n      let songURI = shuffle(mapped);\n      Spotify.savePlaylist(name, songURI);\n    }, 2000);\n  };\n\n  const [menuOpen, setMenuOpen] = useState(true);\n  const [sliderWindowOpen, setSliderWindowOpen] = useState(false); // Making playlist time\n\n  const [searchPageShowing, setSearchPageShowing] = useState(false);\n\n  const notify = () => toast.info(\"Playlist Created!\", {\n    position: \"bottom-right\",\n    autoClose: 2000,\n    hideProgressBar: true,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      menuOpen: menuOpen,\n      setMenuOpen: setMenuOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), searchPageShowing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MainConatiner, {\n        menuOpen: menuOpen,\n        searchHandler: searchHandler,\n        searchArtists: searchArtists,\n        searchResults: searchResults,\n        getSimilarArtists: getSimilarArtists\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SliderWindow, {\n        sliderWindowOpen: sliderWindowOpen,\n        setSliderWindowOpen: setSliderWindowOpen,\n        getTopSongsSimilarArtists: getTopSongsSimilarArtists,\n        notify: notify\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n        position: \"bottom-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        newestOnTop: false,\n        closeOnClick: true,\n        rtl: false,\n        pauseOnFocusLoss: true,\n        draggable: true,\n        pauseOnHover: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MyArtistContainer, {\n        menuOpen: menuOpen,\n        accessToken: accessToken,\n        myFavoriteArtists: myFavoriteArtists,\n        myFavoriteTracks: myFavoriteTracks,\n        getSimilarArtists: getSimilarArtists\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SliderWindow, {\n        sliderWindowOpen: sliderWindowOpen,\n        setSliderWindowOpen: setSliderWindowOpen,\n        getTopSongsSimilarArtists: getTopSongsSimilarArtists,\n        notify: notify\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n        position: \"bottom-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        newestOnTop: false,\n        closeOnClick: true,\n        rtl: false,\n        pauseOnFocusLoss: true,\n        draggable: true,\n        pauseOnHover: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Menu, {\n      setSliderWindowOpen: setSliderWindowOpen,\n      menuOpen: menuOpen,\n      getAccessToken: getAccessToken,\n      setSearchPageShowing: setSearchPageShowing,\n      myDetails: myDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"HL9uf+2z9gadzof3tJEYc93f+5g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/balthazarely/Desktop/Development/Projects/react-spotify-playlistMaker/src/App.js"],"names":["React","useState","useEffect","MainConatiner","Menu","Nav","MyModal","SliderWindow","MyArtistContainer","Spotify","shuffle","ToastContainer","toast","App","accessToken","setAccessToken","myDetails","setMyDetails","myFavoriteArtists","setMyFavoriteArtists","myFavoriteTracks","setMyFavoriteTracks","searchTerm","setSearchTerm","searchResults","setSearchResults","getAccessToken","e","console","log","results","getMyDetails","then","getUsersTopArtists","favArtists","getUsersTopTracks","favTracks","makePlaylistFromArtistAndSong","result","searchHandler","preventDefault","target","value","searchArtists","artists","items","similarArtists","setSimilarArtists","getSimilarArtists","artistID","setSliderWindowOpen","getTopSongsSimilarArtists","playListName","artistSongArray","map","artist","getTopSongs","id","push","setTimeout","flattened","flat","mapped","concat","Object","values","name","songURI","savePlaylist","menuOpen","setMenuOpen","sliderWindowOpen","searchPageShowing","setSearchPageShowing","notify","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport MainConatiner from \"./components/MainContainer\";\nimport Menu from \"./components/Menu\";\nimport Nav from \"./components/Nav\";\nimport MyModal from \"./components/MyModal\";\nimport SliderWindow from \"./components/SliderWindow\";\nimport MyArtistContainer from \"./components/MyArtistContainer\";\nimport Spotify from \"./utils/spotify\";\nimport shuffle from \"./utils/helpers\";\n\n// Martin127792\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./styles/app.scss\";\n\nfunction App() {\n  const [accessToken, setAccessToken] = useState(null);\n  const [myDetails, setMyDetails] = useState({});\n  const [myFavoriteArtists, setMyFavoriteArtists] = useState([]);\n  const [myFavoriteTracks, setMyFavoriteTracks] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  const getAccessToken = (e) => {\n    console.log(\"its going\");\n    const results = Spotify.getAccessToken();\n    setAccessToken(results);\n  };\n\n  useEffect(() => {\n    const results = Spotify.getAccessToken();\n    setAccessToken(results);\n\n    Spotify.getMyDetails().then((results) => {\n      console.log(results);\n      setMyDetails(results);\n    });\n    Spotify.getUsersTopArtists().then((favArtists) => {\n      setMyFavoriteArtists(favArtists);\n    });\n    Spotify.getUsersTopTracks().then((favTracks) => {\n      setMyFavoriteTracks(favTracks);\n    });\n    Spotify.makePlaylistFromArtistAndSong(\n      \"10gzBoINW3cLJfZUka8Zoe\",\n      \"58R30o2zynpgdvG5Nxfur8\"\n    ).then((result) => {\n      console.log(result);\n    });\n  }, []);\n\n  const searchHandler = (e) => {\n    e.preventDefault();\n    console.log(e.target.value);\n    setSearchTerm(e.target.value);\n  };\n\n  const searchArtists = (e) => {\n    e.preventDefault();\n    Spotify.searchArtists(searchTerm).then((results) => {\n      setSearchResults(results.artists.items);\n      console.log(results.artists.items);\n    });\n  };\n\n  const [similarArtists, setSimilarArtists] = useState([]);\n\n  const getSimilarArtists = (artistID) => {\n    setSliderWindowOpen(true);\n    Spotify.getSimilarArtists(artistID).then((results) => {\n      console.log(results);\n      setSimilarArtists(results.artists);\n    });\n  };\n\n  const getTopSongsSimilarArtists = async (playListName) => {\n    let artistSongArray = [];\n\n    await similarArtists.map((artist) => {\n      Spotify.getTopSongs(artist.id).then((results) => {\n        artistSongArray.push(results);\n        // console.log(artistSongArray);\n      });\n    });\n    setTimeout(() => {\n      let flattened = artistSongArray.flat();\n      let mapped = [].concat(...flattened.map(Object.values));\n      // console.log(mapped, \"this is the final array\");\n      let name = playListName;\n      let songURI = shuffle(mapped);\n      Spotify.savePlaylist(name, songURI);\n    }, 2000);\n  };\n\n  const [menuOpen, setMenuOpen] = useState(true);\n  const [sliderWindowOpen, setSliderWindowOpen] = useState(false);\n  // Making playlist time\n  const [searchPageShowing, setSearchPageShowing] = useState(false);\n\n  const notify = () =>\n    toast.info(\"Playlist Created!\", {\n      position: \"bottom-right\",\n      autoClose: 2000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n\n  return (\n    <div className=\"App\">\n      <Nav menuOpen={menuOpen} setMenuOpen={setMenuOpen} />\n      {searchPageShowing ? (\n        <>\n          <MainConatiner\n            menuOpen={menuOpen}\n            searchHandler={searchHandler}\n            searchArtists={searchArtists}\n            searchResults={searchResults}\n            getSimilarArtists={getSimilarArtists}\n          />\n\n          {/* <MyModal\n            modalOpen={modalOpen}\n            setModalOpen={setModalOpen}\n            getTopSongsSimilarArtists={getTopSongsSimilarArtists}\n          /> */}\n\n          <SliderWindow\n            sliderWindowOpen={sliderWindowOpen}\n            setSliderWindowOpen={setSliderWindowOpen}\n            getTopSongsSimilarArtists={getTopSongsSimilarArtists}\n            notify={notify}\n          />\n          <ToastContainer\n            position=\"bottom-right\"\n            autoClose={5000}\n            hideProgressBar\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n          />\n        </>\n      ) : (\n        <>\n          <MyArtistContainer\n            menuOpen={menuOpen}\n            accessToken={accessToken}\n            myFavoriteArtists={myFavoriteArtists}\n            myFavoriteTracks={myFavoriteTracks}\n            getSimilarArtists={getSimilarArtists}\n          />\n          <SliderWindow\n            sliderWindowOpen={sliderWindowOpen}\n            setSliderWindowOpen={setSliderWindowOpen}\n            getTopSongsSimilarArtists={getTopSongsSimilarArtists}\n            notify={notify}\n          />\n          <ToastContainer\n            position=\"bottom-right\"\n            autoClose={5000}\n            hideProgressBar\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n          />\n        </>\n      )}\n\n      <Menu\n        setSliderWindowOpen={setSliderWindowOpen}\n        menuOpen={menuOpen}\n        getAccessToken={getAccessToken}\n        setSearchPageShowing={setSearchPageShowing}\n        myDetails={myDetails}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}