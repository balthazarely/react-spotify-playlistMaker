{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/balthazarely/Desktop/Development/Projects/react-spotify-playlistMaker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MainConatiner from \"./components/MainContainer\";\nimport Menu from \"./components/Menu\";\nimport Nav from \"./components/Nav\";\nimport MyModal from \"./components/MyModal\";\nimport SliderWindow from \"./components/SliderWindow\";\nimport MyArtistContainer from \"./components/MyArtistContainer\";\nimport Spotify from \"./utils/spotify\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./styles/app.scss\";\n\nfunction App() {\n  _s();\n\n  const [accessToken, setAccessToken] = useState(null);\n  const [myDetails, setMyDetails] = useState({});\n  const [myFavoriteArtists, setMyFavoriteArtists] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const getAccessToken = e => {\n    // const results = Spotify.getAccessToken();\n    // setAccessToken(results);\n    e.preventDefault();\n    Spotify.getAccessToken().then(token => {\n      console.log(token);\n      setAccessToken(token);\n    });\n  };\n\n  useEffect(() => {\n    // console.log(\"calling useffect\");\n    const results = Spotify.getAccessToken();\n    setAccessToken(results);\n    Spotify.getMyDetails().then(results => {\n      console.log(results);\n      setMyDetails(results);\n    });\n    Spotify.getUsersTopArtists().then(favArtists => {\n      // console.log(favArtists);\n      setMyFavoriteArtists(favArtists);\n    });\n  }, []);\n\n  const searchHandler = e => {\n    e.preventDefault();\n    console.log(e.target.value);\n    setSearchTerm(e.target.value);\n  };\n\n  const searchArtists = e => {\n    e.preventDefault();\n    Spotify.searchArtists(searchTerm).then(results => {\n      setSearchResults(results.artists.items);\n      console.log(results.artists.items);\n    }); // Spotify.getMyDetails().then((results) => {\n    //   console.log(results);\n    //   setMyDetails(results);\n    // });\n  };\n\n  const [artist, setArtist] = useState([]);\n  const [similarArtists, setSimilarArtists] = useState([]);\n\n  const getSimilarArtists = artistID => {\n    // e.preventDefault();\n    setSliderWindowOpen(true);\n    setModalOpen(true);\n    Spotify.getSimilarArtists(artistID).then(results => {\n      console.log(results);\n      setSimilarArtists(results.artists);\n    });\n  };\n\n  const getTopSongsSimilarArtists = async playListName => {\n    // e.preventDefault();\n    let artistSongArray = [];\n    await similarArtists.map(artist => {\n      Spotify.getTopSongs(artist.id).then(results => {\n        artistSongArray.push(results);\n        console.log(artistSongArray);\n      });\n    });\n    setTimeout(() => {\n      let flattened = artistSongArray.flat();\n      let mapped = [].concat(...flattened.map(Object.values));\n      console.log(mapped, \"this is the final array\");\n      let name = playListName;\n      let songURI = mapped;\n      Spotify.savePlaylist(name, songURI);\n    }, 3000);\n  };\n\n  const [menuOpen, setMenuOpen] = useState(true);\n  const [sliderWindowOpen, setSliderWindowOpen] = useState(false); // Making playlist time\n\n  const [searchPageShowing, setSearchPageShowing] = useState(false); // const loginToSpotfiy = () => {\n  //   console.log(\"trying to get details\");\n  //   Spotify.getMyDetails().then((results) => {\n  //     console.log(results);\n  //     setMyDetails(results);\n  //   });\n  // };\n\n  const notify = () => toast(\"Wow so easy !\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      menuOpen: menuOpen,\n      setMenuOpen: setMenuOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), searchPageShowing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MainConatiner, {\n        menuOpen: menuOpen,\n        searchHandler: searchHandler,\n        searchArtists: searchArtists,\n        searchResults: searchResults,\n        getSimilarArtists: getSimilarArtists\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SliderWindow, {\n        sliderWindowOpen: sliderWindowOpen,\n        setSliderWindowOpen: setSliderWindowOpen,\n        getTopSongsSimilarArtists: getTopSongsSimilarArtists\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: notify,\n          children: \"Notify !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(MyArtistContainer, {\n      menuOpen: menuOpen,\n      accessToken: accessToken,\n      myDetails: myDetails,\n      myFavoriteArtists: myFavoriteArtists\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      setSliderWindowOpen: setSliderWindowOpen,\n      menuOpen: menuOpen,\n      getAccessToken: getAccessToken,\n      setSearchPageShowing: setSearchPageShowing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5Cl3UHgZbSq1SOHgeg7Fa7VTjnU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/balthazarely/Desktop/Development/Projects/react-spotify-playlistMaker/src/App.js"],"names":["React","useState","useEffect","MainConatiner","Menu","Nav","MyModal","SliderWindow","MyArtistContainer","Spotify","ToastContainer","toast","App","accessToken","setAccessToken","myDetails","setMyDetails","myFavoriteArtists","setMyFavoriteArtists","searchTerm","setSearchTerm","searchResults","setSearchResults","modalOpen","setModalOpen","getAccessToken","e","preventDefault","then","token","console","log","results","getMyDetails","getUsersTopArtists","favArtists","searchHandler","target","value","searchArtists","artists","items","artist","setArtist","similarArtists","setSimilarArtists","getSimilarArtists","artistID","setSliderWindowOpen","getTopSongsSimilarArtists","playListName","artistSongArray","map","getTopSongs","id","push","setTimeout","flattened","flat","mapped","concat","Object","values","name","songURI","savePlaylist","menuOpen","setMenuOpen","sliderWindowOpen","searchPageShowing","setSearchPageShowing","notify"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport MainConatiner from \"./components/MainContainer\";\nimport Menu from \"./components/Menu\";\nimport Nav from \"./components/Nav\";\nimport MyModal from \"./components/MyModal\";\nimport SliderWindow from \"./components/SliderWindow\";\nimport MyArtistContainer from \"./components/MyArtistContainer\";\nimport Spotify from \"./utils/spotify\";\n\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./styles/app.scss\";\n\nfunction App() {\n  const [accessToken, setAccessToken] = useState(null);\n  const [myDetails, setMyDetails] = useState({});\n  const [myFavoriteArtists, setMyFavoriteArtists] = useState([]);\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const getAccessToken = (e) => {\n    // const results = Spotify.getAccessToken();\n    // setAccessToken(results);\n    e.preventDefault();\n    Spotify.getAccessToken().then((token) => {\n      console.log(token);\n      setAccessToken(token);\n    });\n  };\n\n  useEffect(() => {\n    // console.log(\"calling useffect\");\n    const results = Spotify.getAccessToken();\n    setAccessToken(results);\n\n    Spotify.getMyDetails().then((results) => {\n      console.log(results);\n      setMyDetails(results);\n    });\n    Spotify.getUsersTopArtists().then((favArtists) => {\n      // console.log(favArtists);\n      setMyFavoriteArtists(favArtists);\n    });\n  }, []);\n\n  const searchHandler = (e) => {\n    e.preventDefault();\n    console.log(e.target.value);\n    setSearchTerm(e.target.value);\n  };\n\n  const searchArtists = (e) => {\n    e.preventDefault();\n    Spotify.searchArtists(searchTerm).then((results) => {\n      setSearchResults(results.artists.items);\n      console.log(results.artists.items);\n    });\n    // Spotify.getMyDetails().then((results) => {\n    //   console.log(results);\n    //   setMyDetails(results);\n    // });\n  };\n\n  const [artist, setArtist] = useState([]);\n  const [similarArtists, setSimilarArtists] = useState([]);\n\n  const getSimilarArtists = (artistID) => {\n    // e.preventDefault();\n    setSliderWindowOpen(true);\n    setModalOpen(true);\n    Spotify.getSimilarArtists(artistID).then((results) => {\n      console.log(results);\n      setSimilarArtists(results.artists);\n    });\n  };\n\n  const getTopSongsSimilarArtists = async (playListName) => {\n    // e.preventDefault();\n    let artistSongArray = [];\n\n    await similarArtists.map((artist) => {\n      Spotify.getTopSongs(artist.id).then((results) => {\n        artistSongArray.push(results);\n        console.log(artistSongArray);\n      });\n    });\n    setTimeout(() => {\n      let flattened = artistSongArray.flat();\n      let mapped = [].concat(...flattened.map(Object.values));\n      console.log(mapped, \"this is the final array\");\n      let name = playListName;\n      let songURI = mapped;\n      Spotify.savePlaylist(name, songURI);\n    }, 3000);\n  };\n\n  const [menuOpen, setMenuOpen] = useState(true);\n  const [sliderWindowOpen, setSliderWindowOpen] = useState(false);\n  // Making playlist time\n  const [searchPageShowing, setSearchPageShowing] = useState(false);\n\n  // const loginToSpotfiy = () => {\n  //   console.log(\"trying to get details\");\n  //   Spotify.getMyDetails().then((results) => {\n  //     console.log(results);\n  //     setMyDetails(results);\n  //   });\n  // };\n\n  const notify = () => toast(\"Wow so easy !\");\n\n  return (\n    <div className=\"App\">\n      <Nav menuOpen={menuOpen} setMenuOpen={setMenuOpen} />\n      {searchPageShowing ? (\n        <>\n          <MainConatiner\n            menuOpen={menuOpen}\n            searchHandler={searchHandler}\n            searchArtists={searchArtists}\n            searchResults={searchResults}\n            getSimilarArtists={getSimilarArtists}\n          />\n\n          {/* <MyModal\n            modalOpen={modalOpen}\n            setModalOpen={setModalOpen}\n            getTopSongsSimilarArtists={getTopSongsSimilarArtists}\n          /> */}\n\n          <SliderWindow\n            sliderWindowOpen={sliderWindowOpen}\n            setSliderWindowOpen={setSliderWindowOpen}\n            getTopSongsSimilarArtists={getTopSongsSimilarArtists}\n          />\n          <div>\n            <button onClick={notify}>Notify !</button>\n            <ToastContainer />\n          </div>\n        </>\n      ) : (\n        <MyArtistContainer\n          menuOpen={menuOpen}\n          accessToken={accessToken}\n          myDetails={myDetails}\n          myFavoriteArtists={myFavoriteArtists}\n        />\n      )}\n\n      <Menu\n        setSliderWindowOpen={setSliderWindowOpen}\n        menuOpen={menuOpen}\n        getAccessToken={getAccessToken}\n        setSearchPageShowing={setSearchPageShowing}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}