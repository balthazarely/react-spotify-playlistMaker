{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/balthazarely/Desktop/Development/Projects/react-spotify-playlistMaker/src/components/FavoriteTracksCard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Label, Checkbox } from \"semantic-ui-react\";\nexport default function FavoriteTracksCard({\n  song,\n  getSimilarSongsRecomendations\n}) {\n  _s();\n\n  console.log(song);\n  const [checkedValue, setCheckedValue] = useState({});\n\n  const handleCheckbox = e => {\n    console.log(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"index\", {\n      className: \"index-wrapper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"image-wrapper\",\n      src: song.album.images.length > 0 ? song.album.images[1].url : null,\n      alt: \"artist-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: song.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"artist-small-wrapper\",\n        children: song.artists.map((song, index) => {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            children: (index ? \", \" : \"\") + song.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        label: \"Add\",\n        value: [song.id, song.artists[0].id],\n        onChange: e => handleCheckbox(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FavoriteTracksCard, \"/d4Bvd2D76ESASJa6ZtUhB8Ksug=\");\n\n_c = FavoriteTracksCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"FavoriteTracksCard\");","map":{"version":3,"sources":["/Users/balthazarely/Desktop/Development/Projects/react-spotify-playlistMaker/src/components/FavoriteTracksCard.jsx"],"names":["React","useState","Label","Checkbox","FavoriteTracksCard","song","getSimilarSongsRecomendations","console","log","checkedValue","setCheckedValue","handleCheckbox","e","target","value","album","images","length","url","name","artists","map","index","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,mBAAhC;AAEA,eAAe,SAASC,kBAAT,CAA4B;AACzCC,EAAAA,IADyC;AAEzCC,EAAAA;AAFyC,CAA5B,EAGZ;AAAA;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,QAAM,CAACI,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMU,cAAc,GAAIC,CAAD,IAAO;AAC5BL,IAAAA,OAAO,CAACC,GAAR,CAAYI,CAAC,CAACC,MAAF,CAASC,KAArB;AACD,GAFD;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAE,kBAAhB;AAAA,4BACE;AAAO,MAAA,SAAS,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,SAAS,EAAC,eADZ;AAEE,MAAA,GAAG,EAAET,IAAI,CAACU,KAAL,CAAWC,MAAX,CAAkBC,MAAlB,GAA2B,CAA3B,GAA+BZ,IAAI,CAACU,KAAL,CAAWC,MAAX,CAAkB,CAAlB,EAAqBE,GAApD,GAA0D,IAFjE;AAGE,MAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,kBAAyBb,IAAI,CAACc;AAA9B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,kBACGd,IAAI,CAACe,OAAL,CAAaC,GAAb,CAAiB,CAAChB,IAAD,EAAOiB,KAAP,KAAiB;AACjC,8BAAO;AAAA,sBAAmB,CAACA,KAAK,GAAG,IAAH,GAAU,EAAhB,IAAsBjB,IAAI,CAACc;AAA9C,aAAWG,KAAX;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFA;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAeE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,KAAK,EAAC,KAFR;AAGE,QAAA,KAAK,EAAE,CAACjB,IAAI,CAACkB,EAAN,EAAUlB,IAAI,CAACe,OAAL,CAAa,CAAb,EAAgBG,EAA1B,CAHT;AAIE,QAAA,QAAQ,EAAGX,CAAD,IAAOD,cAAc,CAACC,CAAD;AAJjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD;;GA5CuBR,kB;;KAAAA,kB","sourcesContent":["import React, { useState } from \"react\";\nimport { Label, Checkbox } from \"semantic-ui-react\";\n\nexport default function FavoriteTracksCard({\n  song,\n  getSimilarSongsRecomendations,\n}) {\n  console.log(song);\n  const [checkedValue, setCheckedValue] = useState({});\n\n  const handleCheckbox = (e) => {\n    console.log(e.target.value);\n  };\n  return (\n    <div className={\"result-container\"}>\n      <index className=\"index-wrapper\">{/* <div>{index}</div> */}</index>\n      <img\n        className=\"image-wrapper\"\n        src={song.album.images.length > 0 ? song.album.images[1].url : null}\n        alt=\"artist-image\"\n      />\n      <div className=\"text-wrapper\">\n        <div className=\"header\">{song.name}</div>\n        <div className=\"artist-small-wrapper\">\n          {song.artists.map((song, index) => {\n            return <span key={index}>{(index ? \", \" : \"\") + song.name}</span>;\n          })}\n        </div>\n      </div>\n      <div className=\"btn-wrapper\">\n        <input\n          type=\"checkbox\"\n          label=\"Add\"\n          value={[song.id, song.artists[0].id]}\n          onChange={(e) => handleCheckbox(e)}\n        />\n\n        {/* <button\n          onClick={() =>\n            getSimilarSongsRecomendations(song.artists[0].id, song.id)\n          }\n        >\n          Make Playlist\n        </button> */}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}