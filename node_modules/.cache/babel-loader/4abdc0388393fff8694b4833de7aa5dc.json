{"ast":null,"code":"import _slicedToArray from\"/Users/balthazarely/Desktop/Development/Projects/react-spotify-playlistMaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useState}from\"react\";import{Input,Loader}from\"semantic-ui-react\";import{ToastContainer,toast}from\"react-toastify\";import\"react-toastify/dist/ReactToastify.css\";export default function SliderWindow(_ref){var getTopSongsSimilarArtists=_ref.getTopSongsSimilarArtists,sliderWindowOpen=_ref.sliderWindowOpen,setSliderWindowOpen=_ref.setSliderWindowOpen,notify=_ref.notify;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),playlistName=_useState2[0],setPlaylistName=_useState2[1];return/*#__PURE__*/_jsxs(\"div\",{className:\"slider-container \".concat(sliderWindowOpen?\"slider-open\":\"\"),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"controls-before\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Please name playlist\"}),/*#__PURE__*/_jsx(Input,{fluid:true,placeholder:\"Playlist name\",size:\"medium\",onChange:function onChange(e){return setPlaylistName(e.target.value);}}),/*#__PURE__*/_jsxs(\"div\",{className:\"btn-container\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn success\",onClick:function onClick(){getTopSongsSimilarArtists(playlistName);setSliderWindowOpen(false);notify();},children:\"Make Playlist\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn cancle\",onClick:function onClick(){return setSliderWindowOpen(false);},children:\"cancle\"})]})]}),\")\"]});}// export default function SearchInput({ searchHandler, searchArtists }) {\n//   const handleEnterPress = (e) => {\n//     if (e.key === \"Enter\") {\n//       searchArtists(e);\n//     }\n//   };\n//   return (\n//     <div className=\"input-wrapper\">\n//       <Input\n//         className=\"input-search\"\n//         placeholder=\"Search Artist...\"\n//         size=\"medium\"\n//         onChange={(e) => searchHandler(e)}\n//         fluid\n//         onKeyDown={(e) => handleEnterPress(e)}\n//       />\n//       {/* Might need button for moible */}\n//       {/* <Button onClick={(e) => searchArtists(e)}>Search</Button> */}\n//     </div>\n//   );\n// }","map":{"version":3,"sources":["/Users/balthazarely/Desktop/Development/Projects/react-spotify-playlistMaker/src/components/SliderWindow.jsx"],"names":["React","useState","Input","Loader","ToastContainer","toast","SliderWindow","getTopSongsSimilarArtists","sliderWindowOpen","setSliderWindowOpen","notify","playlistName","setPlaylistName","e","target","value"],"mappings":"2RAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,KAAT,CAAgBC,MAAhB,KAA8B,mBAA9B,CACA,OAASC,cAAT,CAAyBC,KAAzB,KAAsC,gBAAtC,CACA,MAAO,uCAAP,CACA,cAAe,SAASC,CAAAA,YAAT,MAKZ,IAJDC,CAAAA,yBAIC,MAJDA,yBAIC,CAHDC,gBAGC,MAHDA,gBAGC,CAFDC,mBAEC,MAFDA,mBAEC,CADDC,MACC,MADDA,MACC,eACuCT,QAAQ,CAAC,EAAD,CAD/C,wCACMU,YADN,eACoBC,eADpB,eAGD,mBACE,aACE,SAAS,4BAAsBJ,gBAAgB,CAAG,aAAH,CAAmB,EAAzD,CADX,wBAGE,aAAK,SAAS,CAAC,iBAAf,wBACE,4CADF,cAEE,KAAC,KAAD,EACE,KAAK,KADP,CAEE,WAAW,CAAC,eAFd,CAGE,IAAI,CAAC,QAHP,CAIE,QAAQ,CAAE,kBAACK,CAAD,QAAOD,CAAAA,eAAe,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAtB,EAJZ,EAFF,cAQE,aAAK,SAAS,CAAC,eAAf,wBACE,eACE,SAAS,CAAE,aADb,CAEE,OAAO,CAAE,kBAAM,CACbR,yBAAyB,CAACI,YAAD,CAAzB,CACAF,mBAAmB,CAAC,KAAD,CAAnB,CACAC,MAAM,GACP,CANH,2BADF,cAWE,eACE,SAAS,CAAE,YADb,CAEE,OAAO,CAAE,yBAAMD,CAAAA,mBAAmB,CAAC,KAAD,CAAzB,EAFX,oBAXF,GARF,GAHF,OADF,CAkCD,CAED;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState } from \"react\";\nimport { Input, Loader } from \"semantic-ui-react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nexport default function SliderWindow({\n  getTopSongsSimilarArtists,\n  sliderWindowOpen,\n  setSliderWindowOpen,\n  notify,\n}) {\n  const [playlistName, setPlaylistName] = useState(\"\");\n\n  return (\n    <div\n      className={`slider-container ${sliderWindowOpen ? \"slider-open\" : \"\"}`}\n    >\n      <div className=\"controls-before\">\n        <h2>Please name playlist</h2>\n        <Input\n          fluid\n          placeholder=\"Playlist name\"\n          size=\"medium\"\n          onChange={(e) => setPlaylistName(e.target.value)}\n        />\n        <div className=\"btn-container\">\n          <button\n            className={\"btn success\"}\n            onClick={() => {\n              getTopSongsSimilarArtists(playlistName);\n              setSliderWindowOpen(false);\n              notify();\n            }}\n          >\n            Make Playlist\n          </button>\n          <button\n            className={\"btn cancle\"}\n            onClick={() => setSliderWindowOpen(false)}\n          >\n            cancle\n          </button>\n        </div>\n      </div>\n      )\n    </div>\n  );\n}\n\n// export default function SearchInput({ searchHandler, searchArtists }) {\n//   const handleEnterPress = (e) => {\n//     if (e.key === \"Enter\") {\n//       searchArtists(e);\n//     }\n//   };\n\n//   return (\n//     <div className=\"input-wrapper\">\n//       <Input\n//         className=\"input-search\"\n//         placeholder=\"Search Artist...\"\n//         size=\"medium\"\n//         onChange={(e) => searchHandler(e)}\n//         fluid\n//         onKeyDown={(e) => handleEnterPress(e)}\n//       />\n//       {/* Might need button for moible */}\n//       {/* <Button onClick={(e) => searchArtists(e)}>Search</Button> */}\n//     </div>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}