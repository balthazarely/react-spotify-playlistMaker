{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/balthazarely/Desktop/Development/Projects/react-spotify-playlistMaker/src/components/FavoriteTracksCard.jsx\";\nimport React from \"react\";\nimport { Label } from \"semantic-ui-react\";\nexport default function FavoriteTracksCard({\n  song,\n  getSimilarSongsRecomendations\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"index\", {\n      className: \"index-wrapper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"image-wrapper\",\n      src: song.album.images.length > 0 ? song.album.images[1].url : null,\n      alt: \"artist-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: song.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"artist-small-wrapper\",\n        children: song.artists.map((song, index) => {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            children: (index ? \", \" : \"\") + song.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 20\n          }, this); // return <div>{song.name},</div>;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => getSimilarSongsRecomendations(song.artists[0].id, song.id),\n        children: \"Make Playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this) // <div>\n  //   {song.name}\n  //   {song.artists.map((artist) => {\n  //     return <div>{artist.name}</div>;\n  //   })}\n  // </div>\n  ;\n}\n_c = FavoriteTracksCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"FavoriteTracksCard\");","map":{"version":3,"sources":["/Users/balthazarely/Desktop/Development/Projects/react-spotify-playlistMaker/src/components/FavoriteTracksCard.jsx"],"names":["React","Label","FavoriteTracksCard","song","getSimilarSongsRecomendations","album","images","length","url","name","artists","map","index","id"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,mBAAtB;AAEA,eAAe,SAASC,kBAAT,CAA4B;AACzCC,EAAAA,IADyC;AAEzCC,EAAAA;AAFyC,CAA5B,EAGZ;AACD,sBACE;AAAK,IAAA,SAAS,EAAE,kBAAhB;AAAA,4BACE;AAAO,MAAA,SAAS,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,SAAS,EAAC,eADZ;AAEE,MAAA,GAAG,EAAED,IAAI,CAACE,KAAL,CAAWC,MAAX,CAAkBC,MAAlB,GAA2B,CAA3B,GAA+BJ,IAAI,CAACE,KAAL,CAAWC,MAAX,CAAkB,CAAlB,EAAqBE,GAApD,GAA0D,IAFjE;AAGE,MAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,kBAAyBL,IAAI,CAACM;AAA9B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,kBACGN,IAAI,CAACO,OAAL,CAAaC,GAAb,CAAiB,CAACR,IAAD,EAAOS,KAAP,KAAiB;AACjC,8BAAO;AAAA,sBAAmB,CAACA,KAAK,GAAG,IAAH,GAAU,EAAhB,IAAsBT,IAAI,CAACM;AAA9C,aAAWG,KAAX;AAAA;AAAA;AAAA;AAAA,kBAAP,CADiC,CAGjC;AACD,SAJA;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAiBE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACE;AACE,QAAA,OAAO,EAAE,MACPR,6BAA6B,CAACD,IAAI,CAACO,OAAL,CAAa,CAAb,EAAgBG,EAAjB,EAAqBV,IAAI,CAACU,EAA1B,CAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAkCE;AACA;AACA;AACA;AACA;AACA;AAvCF;AAyCD;KA7CuBX,kB","sourcesContent":["import React from \"react\";\nimport { Label } from \"semantic-ui-react\";\n\nexport default function FavoriteTracksCard({\n  song,\n  getSimilarSongsRecomendations,\n}) {\n  return (\n    <div className={\"result-container\"}>\n      <index className=\"index-wrapper\">{/* <div>{index}</div> */}</index>\n      <img\n        className=\"image-wrapper\"\n        src={song.album.images.length > 0 ? song.album.images[1].url : null}\n        alt=\"artist-image\"\n      />\n      <div className=\"text-wrapper\">\n        <div className=\"header\">{song.name}</div>\n        <div className=\"artist-small-wrapper\">\n          {song.artists.map((song, index) => {\n            return <span key={index}>{(index ? \", \" : \"\") + song.name}</span>;\n\n            // return <div>{song.name},</div>;\n          })}\n        </div>\n      </div>\n      <div className=\"btn-wrapper\">\n        <button\n          onClick={() =>\n            getSimilarSongsRecomendations(song.artists[0].id, song.id)\n          }\n        >\n          Make Playlist\n        </button>\n      </div>\n      {/* <div className=\"btn-wrapper\">\n      <button onClick={() => getSimilarArtists(artist.id)}>\n        Make Playlist\n      </button>\n    </div> */}\n    </div>\n\n    // <div>\n    //   {song.name}\n    //   {song.artists.map((artist) => {\n    //     return <div>{artist.name}</div>;\n    //   })}\n    // </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}