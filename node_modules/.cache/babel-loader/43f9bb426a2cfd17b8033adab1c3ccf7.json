{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/balthazarely/Desktop/Development/Projects/react-spotify-playlistMaker/src/components/SliderWindow.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Input, Loader } from \"semantic-ui-react\";\nexport default function SliderWindow({\n  getTopSongsSimilarArtists,\n  sliderWindowOpen,\n  setSliderWindowOpen,\n  notify\n}) {\n  _s();\n\n  const [playlistName, setPlaylistName] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `slider-container ${sliderWindowOpen ? \"slider-open\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls-before\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Please name playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        fluid: true,\n        placeholder: \"Playlist name\",\n        size: \"medium\",\n        value: inputValue,\n        onChange: e => {\n          setPlaylistName(e.target.value);\n          setInputValue(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn success\",\n          onClick: () => {\n            getTopSongsSimilarArtists(playlistName);\n            setSliderWindowOpen(false);\n            notify();\n            setInputValue(\"\");\n          },\n          children: \"Make Playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn cancle\",\n          onClick: () => {\n            setSliderWindowOpen(false);\n            setInputValue(\"\");\n          },\n          children: \"cancle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), \")\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SliderWindow, \"aAjjbcOSdWE+WaDCoxek+xDLwtA=\");\n\n_c = SliderWindow;\n\nvar _c;\n\n$RefreshReg$(_c, \"SliderWindow\");","map":{"version":3,"sources":["/Users/balthazarely/Desktop/Development/Projects/react-spotify-playlistMaker/src/components/SliderWindow.jsx"],"names":["React","useState","Input","Loader","SliderWindow","getTopSongsSimilarArtists","sliderWindowOpen","setSliderWindowOpen","notify","playlistName","setPlaylistName","inputValue","setInputValue","e","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,mBAA9B;AAEA,eAAe,SAASC,YAAT,CAAsB;AACnCC,EAAAA,yBADmC;AAEnCC,EAAAA,gBAFmC;AAGnCC,EAAAA,mBAHmC;AAInCC,EAAAA;AAJmC,CAAtB,EAKZ;AAAA;;AACD,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AAEA,sBACE;AACE,IAAA,SAAS,EAAG,oBAAmBK,gBAAgB,GAAG,aAAH,GAAmB,EAAG,EADvE;AAAA,4BAGE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,WAAW,EAAC,eAFd;AAGE,QAAA,IAAI,EAAC,QAHP;AAIE,QAAA,KAAK,EAAEK,UAJT;AAKE,QAAA,QAAQ,EAAGE,CAAD,IAAO;AACfH,UAAAA,eAAe,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AACAH,UAAAA,aAAa,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACD;AARH;AAAA;AAAA;AAAA;AAAA,cAFF,eAYE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AACE,UAAA,SAAS,EAAE,aADb;AAEE,UAAA,OAAO,EAAE,MAAM;AACbV,YAAAA,yBAAyB,CAACI,YAAD,CAAzB;AACAF,YAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACAC,YAAAA,MAAM;AACNI,YAAAA,aAAa,CAAC,EAAD,CAAb;AACD,WAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAYE;AACE,UAAA,SAAS,EAAE,YADb;AAEE,UAAA,OAAO,EAAE,MAAM;AACbL,YAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACAK,YAAAA,aAAa,CAAC,EAAD,CAAb;AACD,WALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0CD;;GAnDuBR,Y;;KAAAA,Y","sourcesContent":["import React, { useState } from \"react\";\nimport { Input, Loader } from \"semantic-ui-react\";\n\nexport default function SliderWindow({\n  getTopSongsSimilarArtists,\n  sliderWindowOpen,\n  setSliderWindowOpen,\n  notify,\n}) {\n  const [playlistName, setPlaylistName] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n\n  return (\n    <div\n      className={`slider-container ${sliderWindowOpen ? \"slider-open\" : \"\"}`}\n    >\n      <div className=\"controls-before\">\n        <h2>Please name playlist</h2>\n        <Input\n          fluid\n          placeholder=\"Playlist name\"\n          size=\"medium\"\n          value={inputValue}\n          onChange={(e) => {\n            setPlaylistName(e.target.value);\n            setInputValue(e.target.value);\n          }}\n        />\n        <div className=\"btn-container\">\n          <button\n            className={\"btn success\"}\n            onClick={() => {\n              getTopSongsSimilarArtists(playlistName);\n              setSliderWindowOpen(false);\n              notify();\n              setInputValue(\"\");\n            }}\n          >\n            Make Playlist\n          </button>\n          <button\n            className={\"btn cancle\"}\n            onClick={() => {\n              setSliderWindowOpen(false);\n              setInputValue(\"\");\n            }}\n          >\n            cancle\n          </button>\n        </div>\n      </div>\n      )\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}