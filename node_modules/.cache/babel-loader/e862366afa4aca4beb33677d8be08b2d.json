{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/balthazarely/Desktop/Development/Projects/react-spotify-playlistMaker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MainConatiner from \"./components/MainContainer\";\nimport Menu from \"./components/Menu\";\nimport Nav from \"./components/Nav\";\nimport MyModal from \"./components/MyModal\";\nimport SliderWindow from \"./components/SliderWindow\";\nimport MyArtistContainer from \"./components/MyArtistContainer\";\nimport Spotify from \"./utils/spotify\"; // Martin127792\n\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./styles/app.scss\";\n\nfunction App() {\n  _s();\n\n  const [accessToken, setAccessToken] = useState(null);\n  const [myDetails, setMyDetails] = useState({});\n  const [myFavoriteArtists, setMyFavoriteArtists] = useState([]);\n  const [myFavoriteTracks, setMyFavoriteTracks] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [playlistWasCreated, setPlaylistWasCreated] = useState(false);\n\n  const getAccessToken = e => {\n    // const results = Spotify.getAccessToken();\n    // setAccessToken(results);\n    console.log(\"its going\");\n    const results = Spotify.getAccessToken();\n    setAccessToken(results);\n  };\n\n  function shuffle(array) {\n    var currentIndex = array.length,\n        temporaryValue,\n        randomIndex; // While there remain elements to shuffle...\n\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1; // And swap it with the current element.\n\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  }\n\n  useEffect(() => {\n    // console.log(\"calling useffect\");\n    const results = Spotify.getAccessToken();\n    setAccessToken(results);\n    Spotify.getMyDetails().then(results => {\n      console.log(results);\n      setMyDetails(results);\n    });\n    Spotify.getUsersTopArtists().then(favArtists => {\n      setMyFavoriteArtists(favArtists);\n    });\n    Spotify.getUsersTopTracks().then(favTracks => {\n      setMyFavoriteTracks(favTracks);\n    });\n    Spotify.seedFunction().then(result => {\n      console.log(result);\n    });\n  }, []);\n\n  const searchHandler = e => {\n    e.preventDefault();\n    console.log(e.target.value);\n    setSearchTerm(e.target.value);\n  };\n\n  const searchArtists = e => {\n    e.preventDefault();\n    Spotify.searchArtists(searchTerm).then(results => {\n      setSearchResults(results.artists.items);\n      console.log(results.artists.items);\n    });\n  };\n\n  const [artist, setArtist] = useState([]);\n  const [similarArtists, setSimilarArtists] = useState([]);\n\n  const getSimilarArtists = artistID => {\n    // e.preventDefault();\n    setSliderWindowOpen(true);\n    setModalOpen(true);\n    Spotify.getSimilarArtists(artistID).then(results => {\n      console.log(results);\n      setSimilarArtists(results.artists);\n    });\n  };\n\n  const getTopSongsSimilarArtists = async playListName => {\n    let artistSongArray = [];\n    await similarArtists.map(artist => {\n      Spotify.getTopSongs(artist.id).then(results => {\n        artistSongArray.push(results); // console.log(artistSongArray);\n      });\n    });\n    setTimeout(() => {\n      let flattened = artistSongArray.flat();\n      let mapped = [].concat(...flattened.map(Object.values));\n      console.log(mapped, \"this is the final array\");\n      let name = playListName;\n      let songURI = shuffle(mapped);\n      Spotify.savePlaylist(name, songURI);\n    }, 3000);\n  };\n\n  const [menuOpen, setMenuOpen] = useState(true);\n  const [sliderWindowOpen, setSliderWindowOpen] = useState(false); // Making playlist time\n\n  const [searchPageShowing, setSearchPageShowing] = useState(false);\n\n  const notify = () => toast.info(\"Playlist Created!\", {\n    position: \"bottom-right\",\n    autoClose: 2000,\n    hideProgressBar: true,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      menuOpen: menuOpen,\n      setMenuOpen: setMenuOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), searchPageShowing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MainConatiner, {\n        menuOpen: menuOpen,\n        searchHandler: searchHandler,\n        searchArtists: searchArtists,\n        searchResults: searchResults,\n        getSimilarArtists: getSimilarArtists\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SliderWindow, {\n        sliderWindowOpen: sliderWindowOpen,\n        setSliderWindowOpen: setSliderWindowOpen,\n        getTopSongsSimilarArtists: getTopSongsSimilarArtists,\n        notify: notify\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n        position: \"bottom-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        newestOnTop: false,\n        closeOnClick: true,\n        rtl: false,\n        pauseOnFocusLoss: true,\n        draggable: true,\n        pauseOnHover: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MyArtistContainer, {\n        menuOpen: menuOpen,\n        accessToken: accessToken,\n        myFavoriteArtists: myFavoriteArtists,\n        myFavoriteTracks: myFavoriteTracks,\n        getSimilarArtists: getSimilarArtists\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SliderWindow, {\n        sliderWindowOpen: sliderWindowOpen,\n        setSliderWindowOpen: setSliderWindowOpen,\n        getTopSongsSimilarArtists: getTopSongsSimilarArtists,\n        notify: notify\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n        position: \"bottom-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        newestOnTop: false,\n        closeOnClick: true,\n        rtl: false,\n        pauseOnFocusLoss: true,\n        draggable: true,\n        pauseOnHover: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Menu, {\n      setSliderWindowOpen: setSliderWindowOpen,\n      menuOpen: menuOpen,\n      getAccessToken: getAccessToken,\n      setSearchPageShowing: setSearchPageShowing,\n      myDetails: myDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"vOf/hGN0R+4aaEf2TagKTN7HzCg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/balthazarely/Desktop/Development/Projects/react-spotify-playlistMaker/src/App.js"],"names":["React","useState","useEffect","MainConatiner","Menu","Nav","MyModal","SliderWindow","MyArtistContainer","Spotify","ToastContainer","toast","App","accessToken","setAccessToken","myDetails","setMyDetails","myFavoriteArtists","setMyFavoriteArtists","myFavoriteTracks","setMyFavoriteTracks","searchTerm","setSearchTerm","searchResults","setSearchResults","modalOpen","setModalOpen","playlistWasCreated","setPlaylistWasCreated","getAccessToken","e","console","log","results","shuffle","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","getMyDetails","then","getUsersTopArtists","favArtists","getUsersTopTracks","favTracks","seedFunction","result","searchHandler","preventDefault","target","value","searchArtists","artists","items","artist","setArtist","similarArtists","setSimilarArtists","getSimilarArtists","artistID","setSliderWindowOpen","getTopSongsSimilarArtists","playListName","artistSongArray","map","getTopSongs","id","push","setTimeout","flattened","flat","mapped","concat","Object","values","name","songURI","savePlaylist","menuOpen","setMenuOpen","sliderWindowOpen","searchPageShowing","setSearchPageShowing","notify","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport MainConatiner from \"./components/MainContainer\";\nimport Menu from \"./components/Menu\";\nimport Nav from \"./components/Nav\";\nimport MyModal from \"./components/MyModal\";\nimport SliderWindow from \"./components/SliderWindow\";\nimport MyArtistContainer from \"./components/MyArtistContainer\";\nimport Spotify from \"./utils/spotify\";\n\n// Martin127792\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./styles/app.scss\";\n\nfunction App() {\n  const [accessToken, setAccessToken] = useState(null);\n  const [myDetails, setMyDetails] = useState({});\n  const [myFavoriteArtists, setMyFavoriteArtists] = useState([]);\n  const [myFavoriteTracks, setMyFavoriteTracks] = useState([]);\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [playlistWasCreated, setPlaylistWasCreated] = useState(false);\n\n  const getAccessToken = (e) => {\n    // const results = Spotify.getAccessToken();\n    // setAccessToken(results);\n    console.log(\"its going\");\n    const results = Spotify.getAccessToken();\n    setAccessToken(results);\n  };\n\n  function shuffle(array) {\n    var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  }\n\n  useEffect(() => {\n    // console.log(\"calling useffect\");\n    const results = Spotify.getAccessToken();\n    setAccessToken(results);\n\n    Spotify.getMyDetails().then((results) => {\n      console.log(results);\n      setMyDetails(results);\n    });\n    Spotify.getUsersTopArtists().then((favArtists) => {\n      setMyFavoriteArtists(favArtists);\n    });\n    Spotify.getUsersTopTracks().then((favTracks) => {\n      setMyFavoriteTracks(favTracks);\n    });\n    Spotify.seedFunction().then((result) => {\n      console.log(result);\n    });\n  }, []);\n\n  const searchHandler = (e) => {\n    e.preventDefault();\n    console.log(e.target.value);\n    setSearchTerm(e.target.value);\n  };\n\n  const searchArtists = (e) => {\n    e.preventDefault();\n    Spotify.searchArtists(searchTerm).then((results) => {\n      setSearchResults(results.artists.items);\n      console.log(results.artists.items);\n    });\n  };\n\n  const [artist, setArtist] = useState([]);\n  const [similarArtists, setSimilarArtists] = useState([]);\n\n  const getSimilarArtists = (artistID) => {\n    // e.preventDefault();\n    setSliderWindowOpen(true);\n    setModalOpen(true);\n    Spotify.getSimilarArtists(artistID).then((results) => {\n      console.log(results);\n      setSimilarArtists(results.artists);\n    });\n  };\n\n  const getTopSongsSimilarArtists = async (playListName) => {\n    let artistSongArray = [];\n\n    await similarArtists.map((artist) => {\n      Spotify.getTopSongs(artist.id).then((results) => {\n        artistSongArray.push(results);\n        // console.log(artistSongArray);\n      });\n    });\n    setTimeout(() => {\n      let flattened = artistSongArray.flat();\n      let mapped = [].concat(...flattened.map(Object.values));\n      console.log(mapped, \"this is the final array\");\n      let name = playListName;\n      let songURI = shuffle(mapped);\n      Spotify.savePlaylist(name, songURI);\n    }, 3000);\n  };\n\n  const [menuOpen, setMenuOpen] = useState(true);\n  const [sliderWindowOpen, setSliderWindowOpen] = useState(false);\n  // Making playlist time\n  const [searchPageShowing, setSearchPageShowing] = useState(false);\n\n  const notify = () =>\n    toast.info(\"Playlist Created!\", {\n      position: \"bottom-right\",\n      autoClose: 2000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n\n  return (\n    <div className=\"App\">\n      <Nav menuOpen={menuOpen} setMenuOpen={setMenuOpen} />\n      {searchPageShowing ? (\n        <>\n          <MainConatiner\n            menuOpen={menuOpen}\n            searchHandler={searchHandler}\n            searchArtists={searchArtists}\n            searchResults={searchResults}\n            getSimilarArtists={getSimilarArtists}\n          />\n\n          {/* <MyModal\n            modalOpen={modalOpen}\n            setModalOpen={setModalOpen}\n            getTopSongsSimilarArtists={getTopSongsSimilarArtists}\n          /> */}\n\n          <SliderWindow\n            sliderWindowOpen={sliderWindowOpen}\n            setSliderWindowOpen={setSliderWindowOpen}\n            getTopSongsSimilarArtists={getTopSongsSimilarArtists}\n            notify={notify}\n          />\n          <ToastContainer\n            position=\"bottom-right\"\n            autoClose={5000}\n            hideProgressBar\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n          />\n        </>\n      ) : (\n        <>\n          <MyArtistContainer\n            menuOpen={menuOpen}\n            accessToken={accessToken}\n            myFavoriteArtists={myFavoriteArtists}\n            myFavoriteTracks={myFavoriteTracks}\n            getSimilarArtists={getSimilarArtists}\n          />\n          <SliderWindow\n            sliderWindowOpen={sliderWindowOpen}\n            setSliderWindowOpen={setSliderWindowOpen}\n            getTopSongsSimilarArtists={getTopSongsSimilarArtists}\n            notify={notify}\n          />\n          <ToastContainer\n            position=\"bottom-right\"\n            autoClose={5000}\n            hideProgressBar\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n          />\n        </>\n      )}\n\n      <Menu\n        setSliderWindowOpen={setSliderWindowOpen}\n        menuOpen={menuOpen}\n        getAccessToken={getAccessToken}\n        setSearchPageShowing={setSearchPageShowing}\n        myDetails={myDetails}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}