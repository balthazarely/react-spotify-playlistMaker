{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/balthazarely/Desktop/Development/Projects/react-spotify-playlistMaker/src/components/FavoriteArtistCard.jsx\";\nimport React from \"react\";\nimport { Grid, Image, Icon } from \"semantic-ui-react\";\nexport default function FavoriteArtistCard({\n  artist,\n  getSimilarArtists\n}) {\n  return /*#__PURE__*/_jsxDEV(Grid.Column, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"favorite-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        className: \"favorite-image-wrapper\",\n        src: artist.images.length > 0 ? artist.images[1].url : null // wrapped\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        target: \"BLANK\",\n        href: artist.external_urls.spotify,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"artist-name-bg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"artist-name\",\n        children: artist.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Icon, {\n        className: \"artist-play-icon\",\n        color: \"pink\",\n        size: \"big\",\n        name: \"play circle outline\",\n        onClick: () => getSimilarArtists(artist.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = FavoriteArtistCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"FavoriteArtistCard\");","map":{"version":3,"sources":["/Users/balthazarely/Desktop/Development/Projects/react-spotify-playlistMaker/src/components/FavoriteArtistCard.jsx"],"names":["React","Grid","Image","Icon","FavoriteArtistCard","artist","getSimilarArtists","images","length","url","external_urls","spotify","name","id"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,IAAtB,QAAkC,mBAAlC;AAEA,eAAe,SAASC,kBAAT,CAA4B;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAA5B,EAA2D;AACxE,sBACE,QAAC,IAAD,CAAM,MAAN;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BAEE,QAAC,KAAD;AACE,QAAA,SAAS,EAAC,wBADZ;AAEE,QAAA,GAAG,EAAED,MAAM,CAACE,MAAP,CAAcC,MAAd,GAAuB,CAAvB,GAA2BH,MAAM,CAACE,MAAP,CAAc,CAAd,EAAiBE,GAA5C,GAAkD,IAFzD,CAGE;;AAHF;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE;AAAG,QAAA,MAAM,EAAC,OAAV;AAAkB,QAAA,IAAI,EAAEJ,MAAM,CAACK,aAAP,CAAqBC,OAA7C;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF,eAWE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,kBAA8BN,MAAM,CAACO;AAArC;AAAA;AAAA;AAAA;AAAA,cAXF,eAYE,QAAC,IAAD;AACE,QAAA,SAAS,EAAC,kBADZ;AAEE,QAAA,KAAK,EAAC,MAFR;AAGE,QAAA,IAAI,EAAC,KAHP;AAIE,QAAA,IAAI,EAAC,qBAJP;AAKE,QAAA,OAAO,EAAE,MAAMN,iBAAiB,CAACD,MAAM,CAACQ,EAAR;AALlC;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;KAzBuBT,kB","sourcesContent":["import React from \"react\";\nimport { Grid, Image, Icon } from \"semantic-ui-react\";\n\nexport default function FavoriteArtistCard({ artist, getSimilarArtists }) {\n  return (\n    <Grid.Column>\n      <div className=\"favorite-wrapper\">\n        {/* <a target=\"BLANK\" href={artist.external_urls.spotify}> */}\n        <Image\n          className=\"favorite-image-wrapper\"\n          src={artist.images.length > 0 ? artist.images[1].url : null}\n          // wrapped\n        />\n        {/* </a> */}\n        <a target=\"BLANK\" href={artist.external_urls.spotify}>\n          <div className=\"artist-name-bg\"></div>\n        </a>\n        <div className=\"artist-name\">{artist.name}</div>\n        <Icon\n          className=\"artist-play-icon\"\n          color=\"pink\"\n          size=\"big\"\n          name=\"play circle outline\"\n          onClick={() => getSimilarArtists(artist.id)}\n        />\n      </div>\n    </Grid.Column>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}