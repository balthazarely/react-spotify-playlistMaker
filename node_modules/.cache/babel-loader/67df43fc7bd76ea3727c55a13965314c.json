{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/balthazarely/Desktop/Development/Projects/react-spotify-playlistMaker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MainConatiner from \"./components/MainContainer\";\nimport Menu from \"./components/Menu\";\nimport Nav from \"./components/Nav\";\nimport Login from \"./components/Login\";\nimport Playlist from \"./components/Playlist\";\nimport Spotify from \"./utils/spotify\";\nimport \"./styles/app.scss\";\n\nfunction App() {\n  _s();\n\n  const [accessToken, setAccessToken] = useState(null);\n  const [myDetails, setMyDetails] = useState({});\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [artist, setArtist] = useState([]);\n  const [similarArtists, setSimilarArtists] = useState([]);\n\n  const getAccessToken = () => {\n    const results = Spotify.getAccessToken();\n    setAccessToken(results);\n  };\n\n  const getDetails = () => {\n    const results = Spotify.getMyDetails().then(results => {\n      console.log(results);\n    });\n    setMyDetails(results);\n  };\n\n  const searchHandler = e => {\n    e.preventDefault();\n    console.log(e);\n    setSearchTerm(e);\n  };\n\n  const searchArtists = () => {\n    // e.preventDefault();\n    Spotify.searchArtists(searchTerm).then(results => {\n      setSearchResults(results.artists.items);\n      console.log(results.artists.items);\n    });\n  };\n\n  const selectArtist = artist => {\n    setArtist(artist);\n    console.log(artist);\n  };\n\n  const getSimilarArtists = e => {\n    e.preventDefault();\n    Spotify.getSimilarArtists(artist.id).then(results => {\n      console.log(results);\n      setSimilarArtists(results.artists);\n    });\n  };\n\n  const getTopSongsSimilarArtists = async e => {\n    e.preventDefault();\n    let artistSongArray = [];\n    await similarArtists.map(artist => {\n      Spotify.getTopSongs(artist.id).then(results => {\n        artistSongArray.push(results);\n        console.log(artistSongArray);\n      });\n    });\n    setTimeout(() => {\n      let flattened = artistSongArray.flat();\n      let mapped = [].concat(...flattened.map(Object.values));\n      console.log(mapped, \"this is the final array\");\n      let name = \"test Playlist 1\";\n      let songURI = mapped;\n      Spotify.savePlaylist(name, songURI);\n    }, 3000);\n  };\n\n  const [menuOpen, setMenuOpen] = useState(true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      menuOpen: menuOpen,\n      setMenuOpen: setMenuOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainConatiner, {\n      menuOpen: menuOpen,\n      searchHandler: searchHandler,\n      searchArtists: searchArtists\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      menuOpen: menuOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ThKkRDg1IRInzcVXSOsD1lDpJEA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/balthazarely/Desktop/Development/Projects/react-spotify-playlistMaker/src/App.js"],"names":["React","useState","useEffect","MainConatiner","Menu","Nav","Login","Playlist","Spotify","App","accessToken","setAccessToken","myDetails","setMyDetails","searchTerm","setSearchTerm","searchResults","setSearchResults","artist","setArtist","similarArtists","setSimilarArtists","getAccessToken","results","getDetails","getMyDetails","then","console","log","searchHandler","e","preventDefault","searchArtists","artists","items","selectArtist","getSimilarArtists","id","getTopSongsSimilarArtists","artistSongArray","map","getTopSongs","push","setTimeout","flattened","flat","mapped","concat","Object","values","name","songURI","savePlaylist","menuOpen","setMenuOpen"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport MainConatiner from \"./components/MainContainer\";\nimport Menu from \"./components/Menu\";\nimport Nav from \"./components/Nav\";\n\nimport Login from \"./components/Login\";\nimport Playlist from \"./components/Playlist\";\nimport Spotify from \"./utils/spotify\";\nimport \"./styles/app.scss\";\n\nfunction App() {\n  const [accessToken, setAccessToken] = useState(null);\n  const [myDetails, setMyDetails] = useState({});\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [artist, setArtist] = useState([]);\n  const [similarArtists, setSimilarArtists] = useState([]);\n\n  const getAccessToken = () => {\n    const results = Spotify.getAccessToken();\n    setAccessToken(results);\n  };\n  const getDetails = () => {\n    const results = Spotify.getMyDetails().then((results) => {\n      console.log(results);\n    });\n    setMyDetails(results);\n  };\n\n  const searchHandler = (e) => {\n    e.preventDefault();\n    console.log(e);\n    setSearchTerm(e);\n  };\n\n  const searchArtists = () => {\n    // e.preventDefault();\n    Spotify.searchArtists(searchTerm).then((results) => {\n      setSearchResults(results.artists.items);\n      console.log(results.artists.items);\n    });\n  };\n\n  const selectArtist = (artist) => {\n    setArtist(artist);\n    console.log(artist);\n  };\n\n  const getSimilarArtists = (e) => {\n    e.preventDefault();\n    Spotify.getSimilarArtists(artist.id).then((results) => {\n      console.log(results);\n      setSimilarArtists(results.artists);\n    });\n  };\n\n  const getTopSongsSimilarArtists = async (e) => {\n    e.preventDefault();\n    let artistSongArray = [];\n\n    await similarArtists.map((artist) => {\n      Spotify.getTopSongs(artist.id).then((results) => {\n        artistSongArray.push(results);\n        console.log(artistSongArray);\n      });\n    });\n    setTimeout(() => {\n      let flattened = artistSongArray.flat();\n      let mapped = [].concat(...flattened.map(Object.values));\n      console.log(mapped, \"this is the final array\");\n      let name = \"test Playlist 1\";\n      let songURI = mapped;\n      Spotify.savePlaylist(name, songURI);\n    }, 3000);\n  };\n\n  const [menuOpen, setMenuOpen] = useState(true);\n  return (\n    <div className=\"App\">\n      {/* <button onClick={getAccessToken}>Login</button>\n      <button onClick={getDetails}>getDetails</button>\n      <form>\n        <input placeholder=\"search\" onChange={(e) => searchHandler(e)}></input>\n        <button onClick={searchArtists}>search</button>\n        {searchTerm}\n      </form>\n      <ul>\n        {searchResults &&\n          searchResults.map((artist) => {\n            return (\n              <li key={artist.id} onClick={() => selectArtist(artist)}>\n                {artist.name} |\n              </li>\n            );\n          })}\n      </ul>\n      <div style={{ border: \"2px solid red\" }}>\n        {artist.name} | {artist.id}\n      </div>\n      <button onClick={(e) => getSimilarArtists(e)}>FIND SIMs</button>\n      <button onClick={(e) => getTopSongsSimilarArtists(e)}>\n        getTopSongsSimilarArtists\n      </button>\n      <button onClick={() => Spotify.getUsersTopArtists()}>\n        User TOP USER DATA\n      </button>\n\n      {similarArtists && similarArtists.map((artist) => artist.name)} */}\n      <Nav menuOpen={menuOpen} setMenuOpen={setMenuOpen} />\n      <MainConatiner\n        menuOpen={menuOpen}\n        searchHandler={searchHandler}\n        searchArtists={searchArtists}\n      />\n      <Menu menuOpen={menuOpen} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}